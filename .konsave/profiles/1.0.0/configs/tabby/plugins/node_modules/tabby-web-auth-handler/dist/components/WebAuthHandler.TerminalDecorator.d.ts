import { PlatformService } from 'tabby-core';
import { KeyboardInteractivePrompt } from 'tabby-ssh/typings/session/ssh';
import { TerminalDecorator, BaseTerminalTabComponent } from 'tabby-terminal';
interface ExtendedTerminalTabComponent extends BaseTerminalTabComponent<any> {
    _activeKIPrompt: any;
    _activeKIPromptListener: boolean;
    _activePopupWindow: any;
    _originalLoadURL: string | null;
}
export declare class WebAuthHandlerDecorator extends TerminalDecorator {
    private platform;
    constructor(platform: PlatformService);
    log(...args: any[]): void;
    attach(tab: ExtendedTerminalTabComponent): void;
    detach(tab: ExtendedTerminalTabComponent): void;
    sessionChanged(tab: ExtendedTerminalTabComponent): void;
    createActiveKIPromptListener(tab: ExtendedTerminalTabComponent): void;
    removeActiveKIPromptListener(tab: ExtendedTerminalTabComponent): void;
    activeKIPromptChanged(kiPrompt: KeyboardInteractivePrompt, tab: ExtendedTerminalTabComponent): void;
}
export {};
