(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@angular/common"), require("@angular/core"), require("@angular/forms"), require("@ng-bootstrap/ng-bootstrap"), require("tabby-core"), require("tabby-settings"), require("tabby-terminal"), require("ngx-toastr"), require("fs"), require("tabby-electron"), require("@angular/cdk/drag-drop"));
	else if(typeof define === 'function' && define.amd)
		define(["@angular/common", "@angular/core", "@angular/forms", "@ng-bootstrap/ng-bootstrap", "tabby-core", "tabby-settings", "tabby-terminal", "ngx-toastr", "fs", "tabby-electron", "@angular/cdk/drag-drop"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("@angular/common"), require("@angular/core"), require("@angular/forms"), require("@ng-bootstrap/ng-bootstrap"), require("tabby-core"), require("tabby-settings"), require("tabby-terminal"), require("ngx-toastr"), require("fs"), require("tabby-electron"), require("@angular/cdk/drag-drop")) : factory(root["@angular/common"], root["@angular/core"], root["@angular/forms"], root["@ng-bootstrap/ng-bootstrap"], root["tabby-core"], root["tabby-settings"], root["tabby-terminal"], root["ngx-toastr"], root["fs"], root["tabby-electron"], root["@angular/cdk/drag-drop"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(global, (__WEBPACK_EXTERNAL_MODULE__angular_common__, __WEBPACK_EXTERNAL_MODULE__angular_core__, __WEBPACK_EXTERNAL_MODULE__angular_forms__, __WEBPACK_EXTERNAL_MODULE__ng_bootstrap_ng_bootstrap__, __WEBPACK_EXTERNAL_MODULE_tabby_core__, __WEBPACK_EXTERNAL_MODULE_tabby_settings__, __WEBPACK_EXTERNAL_MODULE_tabby_terminal__, __WEBPACK_EXTERNAL_MODULE_ngx_toastr__, __WEBPACK_EXTERNAL_MODULE_fs__, __WEBPACK_EXTERNAL_MODULE_tabby_electron__, __WEBPACK_EXTERNAL_MODULE__angular_cdk_drag_drop__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/profile-delete-modal.component.html":
/*!*************************************************!*\
  !*** ./src/profile-delete-modal.component.html ***!
  \*************************************************/
/***/ ((module) => {

// Module
var code = "<div class=\"modal-body\">\n  <label translate>{{ prompt }}</label>\n</div>\n<div class=\"modal-footer\">\n  <button class=\"btn btn-primary\" (click)=\"ok()\" translate>OK</button>\n  <button class=\"btn btn-danger ms-2\" (click)=\"cancel()\" translate>Cancel</button>\n</div>\n";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/settings-tab.component.html":
/*!*****************************************!*\
  !*** ./src/settings-tab.component.html ***!
  \*****************************************/
/***/ ((module) => {

// Module
var code = "<h3 translate>Highlight</h3>\n<ul class=\"nav-tabs\" ngbNav #nav=\"ngbNav\">\n  <li ngbNavItem>\n    <a ngbNavLink translate>Highlight</a>\n    <ng-template ngbNavContent>\n      <div class=\"form-line\">\n        <div class=\"header\">\n          <div class=\"title\" translate>Enable highlight</div>\n          <div class=\"description\" translate>Highlight master switch</div>\n        </div>\n        <toggle [(ngModel)]=\"pluginConfig.highlightEnabled\" (ngModelChange)=\"apply()\"></toggle>\n      </div>\n      <div class=\"content-box w-100\" *ngIf=\"pluginConfig.highlightEnabled === true\">\n        <div class=\"form-line\">\n          <div class=\"header\">\n            <div class=\"title\" translate>Disable highlight in alternate screen</div>\n            <div class=\"description\" translate>For example: vi/vim</div>\n          </div>\n          <toggle [(ngModel)]=\"pluginConfig.highlightAlternateDisable\" (ngModelChange)=\"apply()\">\n          </toggle>\n        </div>\n        <div class=\"form-line\">\n          <div class=\"header\">\n            <div class=\"title\" translate>Enable per session profile</div>\n          </div>\n          <toggle [(ngModel)]=\"pluginConfig.highlightPerSessionEnabled\" (ngModelChange)=\"apply()\">\n          </toggle>\n        </div>\n        <div class=\"content-box w-100\" *ngIf=\"pluginConfig.highlightPerSessionEnabled === true\">\n          <div class=\"d-flex w-100\">\n            <button class=\"btn btn-primary\" (click)=\"addHighlightPerSessionProfileMap()\">\n              <i class=\"fas fa-solid fa-plus\"></i>\n              <span translate>Add</span>\n            </button>\n          </div>\n          <div class=\"list-group mt-3 mb-3\">\n            <div class=\"list-group-item active d-flex align-items-center\">\n              <span class=\"text-center w-100\" translate>Session</span>\n              <span class=\"text-center w-100\" translate>Profile</span>\n              <span class=\"text-end\" translate style=\"margin-right: 13px; width: 38px; flex: none\">\n                <i class=\"fas fa-solid fa-trash\"></i>\n              </span>\n            </div>\n            <ng-container\n              *ngFor=\"let item of pluginConfig.highlightPerSessionProfileMap; let i = index\"\n            >\n              <div\n                class=\"list-group-item d-flex align-items-center list-group-item-action list-group-item-highlight\"\n              >\n                <div class=\"input-group\">\n                  <select\n                    class=\"form-control\"\n                    [(ngModel)]=\"item.sessionId\"\n                    (ngModelChange)=\"apply()\"\n                  >\n                    <option [ngValue]=\"uuidNIL\" translate>No session selected</option>\n                    <option\n                      *ngFor=\"let session of getSessions(item.sessionId)\"\n                      [ngValue]=\"session.id\"\n                    >\n                      {{ session.name }}\n                    </option>\n                  </select>\n                  <select\n                    class=\"form-control\"\n                    [(ngModel)]=\"item.profileId\"\n                    (ngModelChange)=\"apply()\"\n                  >\n                    <option [ngValue]=\"uuidNIL\" translate>Disable Highlight</option>\n                    <option\n                      *ngFor=\"let profile of pluginConfig.highlightProfiles\"\n                      [ngValue]=\"profile.id\"\n                    >\n                      {{ profile.name }}\n                    </option>\n                  </select>\n                </div>\n                <button\n                  class=\"btn btn-outline-secondary ms-1\"\n                  style=\"width: 38px; flex: none\"\n                  (click)=\"delPerSessionProfile(i)\"\n                >\n                  <i class=\"fas fa-solid fa-trash\"></i>\n                </button>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"form-line\">\n          <div class=\"header\">\n            <div class=\"title\" translate>Enable per session group profile</div>\n          </div>\n          <toggle\n            [(ngModel)]=\"pluginConfig.highlightPerSessionGroupEnabled\"\n            (ngModelChange)=\"apply()\"\n          >\n          </toggle>\n        </div>\n        <div\n          class=\"content-box w-100\"\n          *ngIf=\"pluginConfig.highlightPerSessionGroupEnabled === true\"\n        >\n          <div class=\"d-flex w-100\">\n            <button class=\"btn btn-primary\" (click)=\"addHighlightPerSessionGroupProfile()\">\n              <i class=\"fas fa-solid fa-plus\"></i>\n              <span translate>Add</span>\n            </button>\n          </div>\n          <div class=\"list-group mt-3 mb-3\">\n            <div class=\"list-group-item active d-flex align-items-center\">\n              <span class=\"text-center w-100\" translate>Session Group</span>\n              <span class=\"text-center w-100\" translate>Profile</span>\n              <span class=\"text-end\" translate style=\"margin-right: 13px; width: 38px; flex: none\">\n                <i class=\"fas fa-solid fa-trash\"></i>\n              </span>\n            </div>\n            <ng-container\n              *ngFor=\"let item of pluginConfig.highlightPerSessionGroupProfileMap; let i = index\"\n            >\n              <div\n                class=\"list-group-item d-flex align-items-center list-group-item-action list-group-item-highlight\"\n              >\n                <div class=\"input-group\">\n                  <select class=\"form-control\" [(ngModel)]=\"item.groupId\" (ngModelChange)=\"apply()\">\n                    <option [ngValue]=\"uuidNIL\" translate>No session group selected</option>\n                    <option\n                      *ngFor=\"let group of getSessionGroups(item.groupId)\"\n                      [ngValue]=\"group.id\"\n                    >\n                      {{ group.name }}\n                    </option>\n                  </select>\n                  <select\n                    class=\"form-control\"\n                    [(ngModel)]=\"item.profileId\"\n                    (ngModelChange)=\"apply()\"\n                  >\n                    <option [ngValue]=\"uuidNIL\" translate>Disable Highlight</option>\n                    <option\n                      *ngFor=\"let profile of pluginConfig.highlightProfiles\"\n                      [ngValue]=\"profile.id\"\n                    >\n                      {{ profile.name }}\n                    </option>\n                  </select>\n                </div>\n                <button\n                  class=\"btn btn-outline-secondary ms-1\"\n                  style=\"width: 38px; flex: none\"\n                  (click)=\"delPerSessionGroupProfile(i)\"\n                >\n                  <i class=\"fas fa-solid fa-trash\"></i>\n                </button>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"form-line\">\n          <div class=\"header\">\n            <div class=\"title\" translate>Enable per session type profile</div>\n          </div>\n          <toggle\n            [(ngModel)]=\"pluginConfig.highlightPerSessionTypeEnabled\"\n            (ngModelChange)=\"apply()\"\n          >\n          </toggle>\n        </div>\n        <div class=\"content-box w-100\" *ngIf=\"pluginConfig.highlightPerSessionTypeEnabled === true\">\n          <div class=\"d-flex w-100\">\n            <button class=\"btn btn-primary\" (click)=\"addHighlightPerSessionTypeProfile()\">\n              <i class=\"fas fa-solid fa-plus\"></i>\n              <span translate>Add</span>\n            </button>\n          </div>\n          <div class=\"list-group mt-3 mb-3\">\n            <div class=\"list-group-item active d-flex align-items-center\">\n              <span class=\"text-center w-100\" translate>Session Type</span>\n              <span class=\"text-center w-100\" translate>Profile</span>\n              <span class=\"text-end\" translate style=\"margin-right: 13px; width: 38px; flex: none\">\n                <i class=\"fas fa-solid fa-trash\"></i>\n              </span>\n            </div>\n            <ng-container\n              *ngFor=\"let item of pluginConfig.highlightPerSessionTypeProfileMap; let i = index\"\n            >\n              <div\n                class=\"list-group-item d-flex align-items-center list-group-item-action list-group-item-highlight\"\n              >\n                <div class=\"input-group\">\n                  <select class=\"form-control\" [(ngModel)]=\"item.typeId\" (ngModelChange)=\"apply()\">\n                    <option [ngValue]=\"uuidNIL\" translate>No session type selected</option>\n                    <option\n                      *ngFor=\"let type of getSessionTypes(item.typeId)\"\n                      [ngValue]=\"type\"\n                      translate\n                    >\n                      {{ type }}\n                    </option>\n                  </select>\n                  <select\n                    class=\"form-control\"\n                    [(ngModel)]=\"item.profileId\"\n                    (ngModelChange)=\"apply()\"\n                  >\n                    <option [ngValue]=\"uuidNIL\" translate>Disable Highlight</option>\n                    <option\n                      *ngFor=\"let profile of pluginConfig.highlightProfiles\"\n                      [ngValue]=\"profile.id\"\n                    >\n                      {{ profile.name }}\n                    </option>\n                  </select>\n                </div>\n                <button\n                  class=\"btn btn-outline-secondary ms-1\"\n                  style=\"width: 38px; flex: none\"\n                  (click)=\"delPerSessionTypeProfile(i)\"\n                >\n                  <i class=\"fas fa-solid fa-trash\"></i>\n                </button>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n        <div class=\"form-line\">\n          <div class=\"header\">\n            <div class=\"title\" translate>Enable global profile</div>\n            <div class=\"description\" translate>Global profile is the active tab below</div>\n          </div>\n          <toggle [(ngModel)]=\"pluginConfig.highlightGlobalEnabled\" (ngModelChange)=\"apply()\">\n          </toggle>\n        </div>\n        <ul\n          class=\"nav-tabs\"\n          ngbNav\n          #nav=\"ngbNav\"\n          [(activeId)]=\"currentHighlightProfileIndex\"\n          (navChange)=\"onHighlightProfileChange($event)\"\n          cdkDropList\n          cdkDropListOrientation=\"horizontal\"\n          (cdkDropListDropped)=\"dropProfile($event)\"\n        >\n          <ng-container\n            *ngFor=\"let profile of pluginConfig.highlightProfiles; let profileIndex = index\"\n          >\n            <li cdkDrag ngbNavItem [ngbNavItem]=\"profileIndex\">\n              <a class=\"nav-link\" ngbNavLink (dblclick)=\"renameHighlightProfile($event, profile)\"\n                >{{ profile.name\n                }}<span class=\"close ms-2\" (click)=\"delHighlightProfile($event, profile)\">\n                  <i class=\"fa-regular fa-circle-xmark\"></i>\n                </span>\n              </a>\n              <ng-template ngbNavContent>\n                <div class=\"d-flex w-100\">\n                  <button class=\"btn btn-primary\" (click)=\"addKeyword()\">\n                    <i class=\"fas fa-solid fa-plus\"></i>\n                    <span translate>Add</span>\n                  </button>\n                  <div class=\"flex-grow-1\"></div>\n                  <button class=\"btn btn-primary\" (click)=\"importHighlightProfile()\">\n                    <i class=\"fas fa-solid fa-file-import\"></i>\n                    <span translate>Import</span>\n                  </button>\n                  <button class=\"btn btn-primary ms-2\" (click)=\"exportHighlightProfile()\">\n                    <i class=\"fas fa-solid fa-file-export\"></i>\n                    <span translate>Export</span>\n                  </button>\n                </div>\n                <div\n                  class=\"list-group mt-3 mb-3\"\n                  cdkDropList\n                  (cdkDropListDropped)=\"dropKeyword($event)\"\n                >\n                  <div class=\"container list-group-item active align-items-center\">\n                    <div class=\"row\">\n                      <div class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <span>\n                          <i class=\"fa-solid fa-toggle-on\"></i>\n                        </span>\n                      </div>\n                      <div class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <span translate>(.*)</span>\n                      </div>\n                      <div class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <span translate>Aa</span>\n                      </div>\n                      <div class=\"col gx-1 d-flex justify-content-center align-items-center\">\n                        <span class=\"text-center\" translate>Keyword</span>\n                      </div>\n                      <div class=\"col col-auto gx-1 d-flex\">\n                        <span\n                          class=\"d-flex justify-content-center align-items-center\"\n                          style=\"width: 60px\"\n                        >\n                          <i class=\"fa-solid fa-screwdriver-wrench\"></i>\n                        </span>\n                      </div>\n                      <div class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <span>\n                          <i class=\"fas fa-solid fa-trash\"></i>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <ng-container *ngFor=\"let item of profile.keywords; let i = index\">\n                    <div\n                      class=\"container list-group-item align-items-center list-group-item-action list-group-item-highlight\"\n                      cdkDrag\n                    >\n                      <div class=\"row\">\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <toggle\n                            cdkDragHandle\n                            [(ngModel)]=\"item.enabled\"\n                            (ngModelChange)=\"apply()\"\n                          >\n                          </toggle>\n                        </div>\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <checkbox [(ngModel)]=\"item.isRegExp\" (ngModelChange)=\"apply()\">\n                          </checkbox>\n                        </div>\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <checkbox [(ngModel)]=\"item.isCaseSensitive\" (ngModelChange)=\"apply()\">\n                          </checkbox>\n                        </div>\n                        <div class=\"col gx-1\">\n                          <div\n                            class=\"content-box d-flex align-items-center w-100 position-relative\"\n                          >\n                            <input\n                              class=\"form-control\"\n                              type=\"text\"\n                              [style.color]=\"getForegroundColor(item)\"\n                              [style.background-color]=\"getBackgroundColor(item)\"\n                              [style.font-weight]=\"item.bold ? 'bold' : ''\"\n                              [style.font-style]=\"item.italic ? 'italic' : ''\"\n                              [style.text-decoration]=\"item.underline ? 'underline' : ''\"\n                              [(ngModel)]=\"item.text\"\n                              (ngModelChange)=\"apply()\"\n                              style=\"\n                                background-color: rgba(0, 0, 0, 0.3);\n                                backdrop-filter: blur(3px);\n                              \"\n                            />\n                            <div\n                              class=\"badge rounded-pill text-bg-danger position-absolute center-0 end-0 me-2\"\n                              *ngIf=\"!verifyStatus[profileIndex]?.[i]?.[0]\"\n                              placement=\"end\"\n                              [ngbTooltip]=\"verifyStatus[profileIndex]?.[i]?.[1]\"\n                            >\n                              <i class=\"fa-solid fa-circle-exclamation\"></i>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          class=\"col col-auto gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <div ngbDropdown placement=\"bottom-right\">\n                            <button\n                              class=\"btn btn-outline-primary\"\n                              style=\"width: 60px\"\n                              ngbDropdownToggle\n                              (click)=\"$event.stopPropagation()\"\n                            >\n                              <i class=\"fa-solid fa-screwdriver-wrench\"></i>\n                            </button>\n                            <div\n                              class=\"border border-black\"\n                              ngbDropdownMenu\n                              style=\"\n                                min-width: 280px;\n                                background-color: rgba(0, 0, 0, 0.3);\n                                backdrop-filter: blur(3px);\n                              \"\n                            >\n                              <div class=\"container-fluid\">\n                                <div class=\"h4\" translate>Extra settings</div>\n                                <div class=\"row mt-1\" style=\"min-height: 40px\">\n                                  <div class=\"col d-flex align-items-center\">\n                                    <span class=\"ms-1\" translate>Remark</span>\n                                  </div>\n                                  <div class=\"col-md-auto d-flex align-items-center\">\n                                    <input\n                                      class=\"form-control\"\n                                      [type]=\"text\"\n                                      [(ngModel)]=\"item.remark\"\n                                      (ngModelChange)=\"apply()\"\n                                      style=\"\n                                        width: 170px;\n                                        flex: none;\n                                        background-color: rgba(0, 0, 0, 0.3);\n                                        backdrop-filter: blur(3px);\n                                      \"\n                                    />\n                                  </div>\n                                </div>\n                                <div class=\"row mt-1\" style=\"min-height: 40px\">\n                                  <div class=\"col d-flex align-items-center\">\n                                    <span class=\"ms-1\" translate>Match group</span>\n                                  </div>\n                                  <div class=\"col-md-auto d-flex align-items-center\">\n                                    <input\n                                      class=\"form-control\"\n                                      [type]=\"text\"\n                                      [(ngModel)]=\"item.matchGroup\"\n                                      (ngModelChange)=\"apply()\"\n                                      style=\"\n                                        width: 70px;\n                                        flex: none;\n                                        background-color: rgba(0, 0, 0, 0.3);\n                                        backdrop-filter: blur(3px);\n                                      \"\n                                    />\n                                  </div>\n                                  <div class=\"col-md-auto d-flex align-items-center\">\n                                    <checkbox\n                                      class=\"ms-1\"\n                                      [(ngModel)]=\"item.isMatchGroup\"\n                                      (ngModelChange)=\"apply()\"\n                                    >\n                                    </checkbox>\n                                  </div>\n                                </div>\n                                <div class=\"h4\" translate>Styles</div>\n                                <ng-container *ngFor=\"let style of styles\">\n                                  <div class=\"row mt-1\" style=\"min-height: 40px\">\n                                    <div class=\"col d-flex align-items-center\">\n                                      <span class=\"ms-1\" translate>{{ style.name }}</span>\n                                    </div>\n                                    <div\n                                      class=\"col-md-auto d-flex align-items-center\"\n                                      *ngIf=\"style.valueType\"\n                                    >\n                                      <input\n                                        class=\"form-control\"\n                                        [type]=\"style.valueType\"\n                                        [min]=\"style.min\"\n                                        [max]=\"style.max\"\n                                        [(ngModel)]=\"item[style.valueModel]\"\n                                        (ngModelChange)=\"apply()\"\n                                        style=\"\n                                          width: 70px;\n                                          flex: none;\n                                          background-color: rgba(0, 0, 0, 0.3);\n                                          backdrop-filter: blur(3px);\n                                        \"\n                                      />\n                                    </div>\n                                    <div class=\"col-md-auto d-flex align-items-center\">\n                                      <checkbox\n                                        class=\"ms-1\"\n                                        [(ngModel)]=\"item[style.enabledModel]\"\n                                        (ngModelChange)=\"apply()\"\n                                      >\n                                      </checkbox>\n                                    </div>\n                                  </div>\n                                </ng-container>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <button class=\"btn btn-outline-secondary\" (click)=\"delKeyword(i)\">\n                            <i class=\"fas fa-solid fa-trash\"></i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </ng-template>\n            </li>\n          </ng-container>\n          <li class=\"nav-item\" role=\"presentation\">\n            <button\n              class=\"add-button btn btn-outline-secondary\"\n              (click)=\"addHighlightProfile($event)\"\n            >\n              <i class=\"fa-regular fa-square-plus\"></i>\n            </button>\n          </li>\n        </ul>\n        <div [ngbNavOutlet]=\"nav\"></div>\n        <div class=\"alert alert-info d-flex align-items-center\">\n          <div class=\"me-auto\">\n            <span>\n              <p translate>Drag the ON button may reorder the keyword.</p>\n              <p translate>Keyword on top get high priority.</p>\n              <p translate>Active tab is the global highlight profile.</p>\n              <p translate>Double click tab can change profile name.</p>\n              <p translate>The profile selection order is session > group > type > global.</p>\n            </span>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </li>\n  <li ngbNavItem>\n    <a ngbNavLink translate>Replace</a>\n    <ng-template ngbNavContent>\n      <div class=\"form-line\">\n        <div class=\"header\">\n          <div class=\"title\" translate>Enable replace</div>\n          <div class=\"description\" translate>Replace master switch</div>\n        </div>\n        <toggle [(ngModel)]=\"pluginConfig.replaceEnabled\" (ngModelChange)=\"apply()\"></toggle>\n      </div>\n      <div class=\"content-box w-100\" *ngIf=\"pluginConfig.replaceEnabled === true\">\n        <div class=\"form-line\">\n          <div class=\"header\">\n            <div class=\"title\" translate>Disable replace in alternate screen</div>\n            <div class=\"description\" translate>For example: vi/vim</div>\n          </div>\n          <toggle [(ngModel)]=\"pluginConfig.replaceAlternateDisable\" (ngModelChange)=\"apply()\">\n          </toggle>\n        </div>\n        <ul\n          class=\"nav-tabs\"\n          ngbNav\n          #nav=\"ngbNav\"\n          [(activeId)]=\"currentReplaceProfileIndex\"\n          (navChange)=\"onReplaceProfileChange($event)\"\n          cdkDropList\n          cdkDropListOrientation=\"horizontal\"\n          (cdkDropListDropped)=\"dropReplaceProfile($event)\"\n        >\n          <ng-container\n            *ngFor=\"let profile of pluginConfig.replaceProfiles; let profileIndex = index\"\n          >\n            <li cdkDrag ngbNavItem [ngbNavItem]=\"profileIndex\">\n              <a class=\"nav-link\" ngbNavLink (dblclick)=\"renameReplaceProfile($event, profile)\"\n                >{{ profile.name\n                }}<span class=\"close ms-2\" (click)=\"delReplaceProfile($event, profile)\">\n                  <i class=\"fa-regular fa-circle-xmark\"></i>\n                </span>\n              </a>\n              <ng-template ngbNavContent>\n                <div class=\"d-flex w-100\">\n                  <button class=\"btn btn-primary\" (click)=\"addReplacePattern()\">\n                    <i class=\"fas fa-solid fa-plus\"></i>\n                    <span translate>Add</span>\n                  </button>\n                  <div class=\"flex-grow-1\"></div>\n                  <button class=\"btn btn-primary\" (click)=\"importReplaceProfile()\">\n                    <i class=\"fas fa-solid fa-file-import\"></i>\n                    <span translate>Import</span>\n                  </button>\n                  <button class=\"btn btn-primary ms-2\" (click)=\"exportReplaceProfile()\">\n                    <i class=\"fas fa-solid fa-file-export\"></i>\n                    <span translate>Export</span>\n                  </button>\n                </div>\n                <div\n                  class=\"list-group mt-3 mb-3\"\n                  cdkDropList\n                  (cdkDropListDropped)=\"dropReplacePattern($event)\"\n                >\n                  <div class=\"container list-group-item active align-items-center\">\n                    <div class=\"row\">\n                      <span class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <i class=\"fa-solid fa-toggle-on\"></i>\n                      </span>\n                      <div class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <span>(.*)</span>\n                      </div>\n                      <div class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <span>Aa</span>\n                      </div>\n\n                      <div class=\"col gx-1 d-flex justify-content-center align-items-center\">\n                        <span class=\"text-center w-100\" translate>Search Pattern</span>\n                      </div>\n                      <div class=\"col gx-1 d-flex justify-content-center align-items-center\">\n                        <span class=\"text-center w-100\" translate>Replace Pattern</span>\n                      </div>\n                      <div class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\">\n                        <span>\n                          <i class=\"fas fa-solid fa-trash\"></i>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <ng-container *ngFor=\"let item of profile.patterns; let i = index\">\n                    <div\n                      class=\"container list-group-item align-items-center list-group-item-action list-group-item-highlight\"\n                      cdkDrag\n                    >\n                      <div class=\"row\">\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <toggle\n                            cdkDragHandle\n                            [(ngModel)]=\"item.enabled\"\n                            (ngModelChange)=\"apply()\"\n                          >\n                          </toggle>\n                        </div>\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <checkbox [(ngModel)]=\"item.isRegExp\" (ngModelChange)=\"apply()\">\n                          </checkbox>\n                        </div>\n\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <checkbox [(ngModel)]=\"item.isCaseSensitive\" (ngModelChange)=\"apply()\">\n                          </checkbox>\n                        </div>\n\n                        <div class=\"col gx-1\">\n                          <div\n                            class=\"content-box d-flex align-items-center w-100 position-relative\"\n                          >\n                            <input\n                              class=\"form-control\"\n                              style=\"\n                                background-color: rgba(0, 0, 0, 0.3);\n                                backdrop-filter: blur(3px);\n                              \"\n                              type=\"text\"\n                              [(ngModel)]=\"item.search\"\n                              (ngModelChange)=\"apply()\"\n                            />\n                            <div\n                              class=\"badge rounded-pill text-bg-danger position-absolute center-0 end-0 me-2\"\n                              *ngIf=\"!replaceVerifyStatus[profileIndex]?.[i]?.[0]\"\n                              placement=\"end\"\n                              [ngbTooltip]=\"replaceVerifyStatus[profileIndex]?.[i]?.[1]\"\n                            >\n                              <i class=\"fa-solid fa-circle-exclamation\"></i>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"col gx-1\">\n                          <div class=\"content-box d-flex align-items-center w-100 ms-1\">\n                            <input\n                              class=\"form-control\"\n                              style=\"\n                                background-color: rgba(0, 0, 0, 0.3);\n                                backdrop-filter: blur(3px);\n                              \"\n                              type=\"text\"\n                              [(ngModel)]=\"item.replace\"\n                              (ngModelChange)=\"apply()\"\n                            />\n                          </div>\n                        </div>\n\n                        <div\n                          class=\"col col-1 gx-1 d-flex justify-content-center align-items-center\"\n                        >\n                          <button class=\"btn btn-outline-secondary\" (click)=\"delReplacePattern(i)\">\n                            <i class=\"fas fa-solid fa-trash\"></i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </ng-template>\n            </li>\n          </ng-container>\n          <li class=\"nav-item\" role=\"presentation\">\n            <button\n              class=\"add-button btn btn-outline-secondary\"\n              (click)=\"addReplaceProfile($event)\"\n            >\n              <i class=\"fa-regular fa-square-plus\"></i>\n            </button>\n          </li>\n        </ul>\n        <div [ngbNavOutlet]=\"nav\"></div>\n        <div class=\"alert alert-info d-flex align-items-center\">\n          <div class=\"me-auto\">\n            <span>\n              <p translate>Drag the ON button may reorder the pattern.</p>\n              <p translate>Replacement processed from top to end.</p>\n              <p translate>Active tab is the global highlight profile.</p>\n              <p translate>Double click tab can change profile name.</p>\n              <p translate>If you want to add a new line, add \"\\n\" to the replace pattern.</p>\n            </span>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </li>\n</ul>\n<div [ngbNavOutlet]=\"nav\"></div>\n";
// Exports
module.exports = code;

/***/ }),

/***/ "./src/config.provider.ts":
/*!********************************!*\
  !*** ./src/config.provider.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HighlightConfigProvider: () => (/* binding */ HighlightConfigProvider)
/* harmony export */ });
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tabby-core */ "tabby-core");
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tabby_core__WEBPACK_IMPORTED_MODULE_0__);

class HighlightConfigProvider extends tabby_core__WEBPACK_IMPORTED_MODULE_0__.ConfigProvider {
    defaults = {
        highlightPlugin: {
            highlightEnabled: false,
            highlightAlternateDisable: false,
            highlightMode: "xterm-control-sequence",
            highlightCurrentProfile: "60606be0-c0ff-42bc-bf77-de8a2435447f",
            highlightKeywords: null,
            highlightProfiles: [
                {
                    id: "60606be0-c0ff-42bc-bf77-de8a2435447f",
                    name: "Default",
                    keywords: [
                        {
                            text: "ERROR",
                            enabled: true,
                            background: true,
                            backgroundColor: "1",
                        },
                        {
                            text: "WARN",
                            enabled: true,
                            background: true,
                            backgroundColor: "3",
                        },
                        {
                            text: "INFO",
                            enabled: true,
                            background: true,
                            backgroundColor: "6",
                        },
                        {
                            text: "错误",
                            enabled: true,
                            background: true,
                            backgroundColor: "1",
                        },
                        {
                            text: "警告",
                            enabled: true,
                            background: true,
                            backgroundColor: "3",
                        },
                        {
                            text: "信息",
                            enabled: true,
                            background: true,
                            backgroundColor: "6",
                        },
                    ],
                },
            ],
            highlightPerSessionEnabled: false,
            highlightPerSessionProfileMap: [],
            highlightPerSessionGroupEnabled: false,
            highlightPerSessionGroupProfileMap: [],
            highlightPerSessionTypeEnabled: false,
            highlightPerSessionTypeProfileMap: [],
            highlightGlobalEnabled: true,
            replaceEnabled: false,
            replaceAlternateDisable: false,
            replaceCurrentProfile: "986666dd-dac9-4c7a-a295-9b4aff66abdd",
            replaceProfiles: [
                {
                    id: "986666dd-dac9-4c7a-a295-9b4aff66abdd",
                    name: "Default",
                    patterns: [
                        { enabled: true, search: "ERROR", replace: "出错啦" },
                        { enabled: true, search: "WARN", replace: "警告警告" },
                    ],
                },
            ],
        },
    };
}


/***/ }),

/***/ "./src/context-menu.provider.ts":
/*!**************************************!*\
  !*** ./src/context-menu.provider.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HighlightContextMenu: () => (/* binding */ HighlightContextMenu)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "@angular/core");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-toastr */ "ngx-toastr");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ngx_toastr__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tabby-core */ "tabby-core");
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tabby_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tabby-terminal */ "tabby-terminal");
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(tabby_terminal__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _highlight_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./highlight.service */ "./src/highlight.service.ts");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-node/nil.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;






let HighlightContextMenu = class HighlightContextMenu extends tabby_core__WEBPACK_IMPORTED_MODULE_2__.TabContextMenuItemProvider {
    highlightService;
    config;
    toastr;
    translate;
    weight = 1;
    constructor(highlightService, config, toastr, translate) {
        super();
        this.highlightService = highlightService;
        this.config = config;
        this.toastr = toastr;
        this.translate = translate;
    }
    async getItems(tab) {
        const pluginConfig = this.config.store.highlightPlugin;
        if (!(tab instanceof tabby_terminal__WEBPACK_IMPORTED_MODULE_3__.BaseTerminalTabComponent) || !pluginConfig.highlightEnabled) {
            return [];
        }
        return [
            {
                label: this.translate.instant("Highlight"),
                type: "submenu",
                submenu: [
                    {
                        id: uuid__WEBPACK_IMPORTED_MODULE_5__["default"],
                        name: this.translate.instant("Disable Highlight"),
                        keywords: [],
                    },
                ]
                    .concat(this.highlightService.getHighlightProfiles())
                    .map((value) => ({
                    type: "radio",
                    label: value.name,
                    checked: tab.highlightProfile?.id === value.id,
                    click: () => {
                        if (!pluginConfig.highlightPerSessionEnabled) {
                            this.toastr.warning(this.translate.instant("[Highlight] Can not change session profile due to per session profile not enabled"));
                            return;
                        }
                        this.highlightService.setHighlightPerSessionProfileMap(tab.profile.id, value.id);
                    },
                })),
            },
        ];
    }
};
HighlightContextMenu = __decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_highlight_service__WEBPACK_IMPORTED_MODULE_4__.HighlightService,
        tabby_core__WEBPACK_IMPORTED_MODULE_2__.ConfigService,
        ngx_toastr__WEBPACK_IMPORTED_MODULE_1__.ToastrService, typeof (_a = typeof tabby_core__WEBPACK_IMPORTED_MODULE_2__.TranslateService !== "undefined" && tabby_core__WEBPACK_IMPORTED_MODULE_2__.TranslateService) === "function" ? _a : Object])
], HighlightContextMenu);



/***/ }),

/***/ "./src/highlight.decorator.ts":
/*!************************************!*\
  !*** ./src/highlight.decorator.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HighlightDecorator: () => (/* binding */ HighlightDecorator)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "@angular/core");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tabby-terminal */ "tabby-terminal");
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tabby_terminal__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _highlight_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./highlight.middleware */ "./src/highlight.middleware.ts");
/* harmony import */ var _highlight_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./highlight.service */ "./src/highlight.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




let HighlightDecorator = class HighlightDecorator extends tabby_terminal__WEBPACK_IMPORTED_MODULE_1__.TerminalDecorator {
    highlightService;
    injector;
    constructor(highlightService, injector) {
        super();
        this.highlightService = highlightService;
        this.injector = injector;
    }
    attach(tab) {
        if (tab.sessionChanged$) {
            tab.sessionChanged$.subscribe((session) => {
                if (session) {
                    this.attachToSession(session, tab);
                }
            });
        }
        if (tab.session) {
            this.attachToSession(tab.session, tab);
        }
    }
    attachToSession(session, tab) {
        this.highlightService.injectHighlightToTab(tab);
        const middleware = new _highlight_middleware__WEBPACK_IMPORTED_MODULE_2__["default"](this.injector, tab);
        session.middleware.push(middleware);
    }
};
HighlightDecorator = __decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [_highlight_service__WEBPACK_IMPORTED_MODULE_3__.HighlightService, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector])
], HighlightDecorator);



/***/ }),

/***/ "./src/highlight.middleware.ts":
/*!*************************************!*\
  !*** ./src/highlight.middleware.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ HighlightMiddleware)
/* harmony export */ });
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngx-toastr */ "ngx-toastr");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngx_toastr__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tabby-core */ "tabby-core");
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tabby_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tabby-terminal */ "tabby-terminal");
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tabby_terminal__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var utils_decorators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! utils-decorators */ "./node_modules/utils-decorators/dist/esm/debounce/debounce.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




class HighlightMiddleware extends tabby_terminal__WEBPACK_IMPORTED_MODULE_2__.SessionMiddleware {
    tab;
    logger;
    toastr;
    translate;
    enterReplacer = "\r\n";
    pluginConfig;
    constructor(injector, tab) {
        super();
        this.tab = tab;
        this.logger = injector.get(tabby_core__WEBPACK_IMPORTED_MODULE_1__.LogService).create(`tabby-highlight`);
        this.toastr = injector.get(ngx_toastr__WEBPACK_IMPORTED_MODULE_0__.ToastrService);
        this.translate = injector.get(tabby_core__WEBPACK_IMPORTED_MODULE_1__.TranslateService);
        this.pluginConfig = injector.get(tabby_core__WEBPACK_IMPORTED_MODULE_1__.ConfigService).store.highlightPlugin;
        this.logger.info("HighlightMiddleware ctor.");
    }
    feedFromSession(data) {
        if (data.length === 0) {
            return super.feedFromSession(data);
        }
        const dataStringRaw = data.toString();
        const dataStringSplitted = dataStringRaw.split(this.enterReplacer);
        const { highlightAlternateDisable, replaceAlternateDisable } = this.pluginConfig;
        const isAlternate = this.tab.alternateScreenActive;
        const dataStringArray = [];
        let passthroughFlag = true;
        for (let dataString of dataStringSplitted) {
            const { highlightProfile, replaceProfile } = this.tab;
            let dataStringReplaced = dataString;
            if (replaceProfile && ((isAlternate && !replaceAlternateDisable) || !isAlternate)) {
                const { patterns } = replaceProfile;
                for (const pattern of patterns) {
                    const { enabled, isCaseSensitive, isRegExp, search, replace } = pattern;
                    if (enabled) {
                        passthroughFlag = false;
                        const regexpFlag = isCaseSensitive ? "g" : "gi";
                        let pattern;
                        try {
                            pattern = isRegExp
                                ? new RegExp(`${search}`, regexpFlag)
                                : new RegExp(search.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), regexpFlag);
                        }
                        catch (e) {
                            this.toast("[Highlight] Something wrong when creating RegExp, please check replace settings");
                            this.logger.error(e.message);
                            return super.feedFromSession(data);
                        }
                        dataStringReplaced = dataStringReplaced.replaceAll(pattern, replace.replaceAll("\\n", this.enterReplacer));
                    }
                }
            }
            let dataStringHighlighted = dataStringReplaced;
            if (highlightProfile && ((isAlternate && !highlightAlternateDisable) || !isAlternate)) {
                const { keywords } = highlightProfile;
                const occurrences = [];
                for (const keyword of keywords) {
                    const { text, enabled, isRegExp = false, isCaseSensitive = false, foreground = false, foregroundColor = "0", background = false, backgroundColor = "1", bold = false, italic = false, underline = false, dim = false, isMatchGroup = false, matchGroup = "0", } = keyword;
                    if (!enabled) {
                        continue;
                    }
                    const regexpFlag = isCaseSensitive ? "gd" : "gid";
                    let pattern;
                    try {
                        pattern = isRegExp
                            ? new RegExp(`${text}`, regexpFlag)
                            : new RegExp(text.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), regexpFlag);
                    }
                    catch (e) {
                        this.toast("[Highlight] Something wrong when creating RegExp, please check highlight settings");
                        this.logger.error(e.message);
                        return super.feedFromSession(data);
                    }
                    const matches = dataStringReplaced.matchAll(pattern);
                    for (const match of matches) {
                        const indices = match.indices;
                        let indict = indices[0];
                        if (isMatchGroup) {
                            const group = parseInt(matchGroup);
                            if (!isNaN(group)) {
                                indict = indices[group];
                            }
                            else {
                                indict = indices.groups?.[matchGroup];
                            }
                        }
                        if (indict) {
                            const [start, end] = indict;
                            occurrences.push({
                                start: start,
                                end: end - 1,
                                fg: foreground ? foregroundColor : undefined,
                                bg: background ? backgroundColor : undefined,
                                bold,
                                italic,
                                underline,
                                dim,
                            });
                        }
                    }
                }
                if (occurrences.length > 0) {
                    passthroughFlag = false;
                    dataStringHighlighted = "";
                    let char = "";
                    for (let i = 0; i < dataStringReplaced.length; i++) {
                        const subString = dataStringReplaced.slice(i);
                        const csiSequenceMatch = subString.match(/\x1b\[[0-9;?]*[a-zA-Z]/);
                        if (csiSequenceMatch) {
                            if (csiSequenceMatch.index === 0) {
                                i += csiSequenceMatch[0].length - 1;
                                dataStringHighlighted += csiSequenceMatch[0];
                                continue;
                            }
                        }
                        const oscSequenceMatch = subString.match(/\x1b\](?:[^\x07\x1b]*|\x1b(?:[^[\x07]|$))*[\x07\x1b]/);
                        if (oscSequenceMatch) {
                            if (oscSequenceMatch.index === 0) {
                                i += oscSequenceMatch[0].length - 1;
                                dataStringHighlighted += oscSequenceMatch[0];
                                continue;
                            }
                        }
                        char = subString[0];
                        const charCode = char.charCodeAt(0);
                        if (charCode >= 0xd800 && charCode <= 0xdfff) {
                            char += subString[1];
                            i++;
                        }
                        for (const occurrence of occurrences) {
                            const { start, end, bg, fg, bold, italic, underline, dim } = occurrence;
                            if (i >= start && i <= end) {
                                const beginSeq = [];
                                const endSeq = [];
                                if (fg) {
                                    beginSeq.push(`38;5;${fg}`);
                                    endSeq.push(`39`);
                                }
                                if (bg) {
                                    beginSeq.push(`48;5;${bg}`);
                                    endSeq.push(`49`);
                                }
                                if (bold) {
                                    beginSeq.push(`1`);
                                    endSeq.push(`22`);
                                }
                                if (italic) {
                                    beginSeq.push(`3`);
                                    endSeq.push(`23`);
                                }
                                if (underline) {
                                    beginSeq.push(`4`);
                                    endSeq.push(`24`);
                                }
                                if (dim) {
                                    beginSeq.push(`2`);
                                    endSeq.push(`22`);
                                }
                                char = `\x1b[${beginSeq.join(";")}m${char}\x1b[${endSeq.join(";")}m`;
                                break;
                            }
                        }
                        dataStringHighlighted += char;
                    }
                }
            }
            dataStringArray.push(dataStringHighlighted);
        }
        if (passthroughFlag) {
            return super.feedFromSession(data);
        }
        const dataStringCombined = dataStringArray.join(this.enterReplacer);
        return super.feedFromSession(Buffer.from(dataStringCombined));
    }
    close() {
        super.close();
    }
    toast(message) {
        this.toastr.info(this.translate.instant(message));
    }
}
__decorate([
    (0,utils_decorators__WEBPACK_IMPORTED_MODULE_3__.debounce)(500),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [String]),
    __metadata("design:returntype", void 0)
], HighlightMiddleware.prototype, "toast", null);


/***/ }),

/***/ "./src/highlight.service.ts":
/*!**********************************!*\
  !*** ./src/highlight.service.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HighlightService: () => (/* binding */ HighlightService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "@angular/core");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ "fs");
/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-toastr */ "ngx-toastr");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ngx_toastr__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tabby-core */ "tabby-core");
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(tabby_core__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var tabby_electron__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tabby-electron */ "tabby-electron");
/* harmony import */ var tabby_electron__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(tabby_electron__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tabby-terminal */ "tabby-terminal");
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(tabby_terminal__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-node/nil.js");
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-node/v4.js");
/* harmony import */ var _translations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./translations */ "./src/translations.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;








const nullProfile = { id: uuid__WEBPACK_IMPORTED_MODULE_7__["default"], name: "Disable highlight", keywords: [] };
let HighlightService = class HighlightService {
    config;
    logService;
    translate;
    electron;
    hostWindow;
    toastr;
    app;
    logger;
    pluginConfig;
    constructor(config, logService, translate, electron, hostWindow, toastr, app) {
        this.config = config;
        this.logService = logService;
        this.translate = translate;
        this.electron = electron;
        this.hostWindow = hostWindow;
        this.toastr = toastr;
        this.app = app;
        this.logger = this.logService.create("tabby-highlight");
        this.logger.info("HighlightService ctor");
        this.config.ready$.subscribe(() => {
            this.logger.info("config ready");
            setImmediate(() => {
                for (const translation of _translations__WEBPACK_IMPORTED_MODULE_6__.translations) {
                    const [lang, trans] = translation;
                    this.translate.setTranslation(lang, trans, true);
                    this.logger.info("translate applied");
                }
            });
            this.pluginConfig = this.config.store.highlightPlugin;
        });
    }
    getHighlightProfiles(appendNil) {
        if (appendNil) {
            return [nullProfile].concat(this.pluginConfig.highlightProfiles);
        }
        return this.pluginConfig.highlightProfiles;
    }
    getCurrentHighlightProfile() {
        return this.getHighlightProfileById(this.pluginConfig.highlightCurrentProfile);
    }
    setCurrentHighlightProfileById(id) {
        this.pluginConfig.highlightCurrentProfile = id;
        this.logger.info(`Highlight profile switched to [${id}]`);
        this.saveConfig();
    }
    getCurrentHighlightProfileIndex() {
        return this.getHighlightProfileIndexById(this.pluginConfig.highlightCurrentProfile);
    }
    setCurrentHighlightProfileByIndex(i) {
        this.setCurrentHighlightProfileById(this.pluginConfig.highlightProfiles[i].id);
    }
    getHighlightProfileIndexById(id) {
        let currentIndex = 0;
        const result = this.pluginConfig.highlightProfiles.find((value, index) => {
            currentIndex = index;
            return value.id === this.pluginConfig.highlightCurrentProfile;
        });
        return currentIndex;
    }
    getHighlightProfileById(id) {
        if (id === uuid__WEBPACK_IMPORTED_MODULE_7__["default"]) {
            return nullProfile;
        }
        return this.pluginConfig.highlightProfiles.find((profile) => profile.id === id);
    }
    getHighlightProfileBySessionId(sessionId) {
        return this.getHighlightProfileById(this.pluginConfig.highlightPerSessionProfileMap.find((map) => map.sessionId === sessionId)
            ?.profileId);
    }
    getHighlightProfileBySessionGroupId(groupId) {
        return this.getHighlightProfileById(this.pluginConfig.highlightPerSessionGroupProfileMap.find((map) => map.groupId === groupId)
            ?.profileId);
    }
    getHighlightProfileBySessionTypeId(typeId) {
        return this.getHighlightProfileById(this.pluginConfig.highlightPerSessionTypeProfileMap.find((map) => map.typeId === typeId)
            ?.profileId);
    }
    setHighlightProfile(profile, newProfile, targetId) {
        const targetProfile = targetId ? this.getHighlightProfileById(targetId) : profile;
        Object.assign(targetProfile, newProfile);
        this.logger.info(`Highlight profile [${targetProfile.id}] modified`);
        this.saveConfig();
    }
    addHighlightPerSessionProfileMap(sessionId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"], profileId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"]) {
        this.pluginConfig.highlightPerSessionProfileMap.push({
            sessionId,
            profileId,
        });
        this.saveConfig();
    }
    delHighlightPerSessionProfileMapByIndex(i) {
        this.pluginConfig.highlightPerSessionProfileMap.splice(i, 1);
        this.saveConfig();
    }
    setHighlightPerSessionProfileMap(sessionId, profileId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"]) {
        const profileMap = this.getHighlightPerSessionProfileMap(sessionId);
        if (profileMap) {
            profileMap.profileId = profileId;
            this.saveConfig();
        }
        else {
            this.addHighlightPerSessionProfileMap(sessionId, profileId);
        }
    }
    getHighlightPerSessionProfileMap(sessionId) {
        return this.pluginConfig.highlightPerSessionProfileMap.find((mapValue) => mapValue.sessionId === sessionId);
    }
    addHighlightPerSessionGroupProfileMap(groupId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"], profileId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"]) {
        this.pluginConfig.highlightPerSessionGroupProfileMap.push({
            groupId,
            profileId,
        });
        this.saveConfig();
    }
    delHighlightPerSessionGroupProfileMapByIndex(i) {
        this.pluginConfig.highlightPerSessionGroupProfileMap.splice(i, 1);
        this.saveConfig();
    }
    setHighlightPerSessionGroupProfileMap(groupId, profileId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"]) {
        const profileMap = this.getHighlightPerSessionGroupProfileMap(groupId);
        if (profileMap) {
            profileMap.profileId = profileId;
            this.saveConfig();
        }
        else {
            this.addHighlightPerSessionGroupProfileMap(groupId, profileId);
        }
    }
    getHighlightPerSessionGroupProfileMap(groupId) {
        return this.pluginConfig.highlightPerSessionGroupProfileMap.find((mapValue) => mapValue.groupId === groupId);
    }
    addHighlightPerSessionTypeProfileMap(typeId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"], profileId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"]) {
        this.pluginConfig.highlightPerSessionTypeProfileMap.push({
            typeId,
            profileId,
        });
        this.saveConfig();
    }
    delHighlightPerSessionTypeProfileMapByIndex(i) {
        this.pluginConfig.highlightPerSessionTypeProfileMap.splice(i, 1);
        this.saveConfig();
    }
    setHighlightPerSessionTypeProfileMap(typeId, profileId = uuid__WEBPACK_IMPORTED_MODULE_7__["default"]) {
        const profileMap = this.getHighlightPerSessionTypeProfileMap(typeId);
        if (profileMap) {
            profileMap.profileId = profileId;
            this.saveConfig();
        }
        else {
            this.addHighlightPerSessionTypeProfileMap(typeId, profileId);
        }
    }
    getHighlightPerSessionTypeProfileMap(typeId) {
        return this.pluginConfig.highlightPerSessionTypeProfileMap.find((mapValue) => mapValue.typeId === typeId);
    }
    addHighlightKeyword(id) {
        const newKeyword = {
            text: "INFO",
            enabled: false,
            background: true,
            backgroundColor: "1",
            foregroundColor: "0",
        };
        const targetProfile = id ? this.getHighlightProfileById(id) : this.getCurrentHighlightProfile();
        targetProfile.keywords.unshift(newKeyword);
        this.logger.info(`Highlight profile [${targetProfile.id}] keyword added`);
        this.saveConfig();
    }
    delHighlightKeyword(i, id) {
        const targetProfile = id ? this.getHighlightProfileById(id) : this.getCurrentHighlightProfile();
        targetProfile.keywords.splice(i, 1);
        this.saveConfig();
    }
    addHighlightProfile() {
        const newProfile = {
            id: uuid__WEBPACK_IMPORTED_MODULE_8__["default"](),
            name: `Profile ${this.pluginConfig.highlightProfiles.length}`,
            keywords: [],
        };
        this.pluginConfig.highlightProfiles.push(newProfile);
        this.logger.info(`Highlight profile [${newProfile.id}] added`);
        this.saveConfig();
        this.setCurrentHighlightProfileById(newProfile.id);
    }
    delHighlightProfile(profile) {
        const currentIndex = this.getCurrentHighlightProfile().id === profile.id
            ? this.getCurrentHighlightProfileIndex() - 1
            : this.getCurrentHighlightProfileIndex();
        this.pluginConfig.highlightProfiles = this.pluginConfig.highlightProfiles.filter((item) => item.id !== profile.id);
        this.logger.info(`Highlight profile [${profile.id}] deleted`);
        this.saveConfig();
        this.setCurrentHighlightProfileByIndex(currentIndex);
    }
    importHighlightProfile(id) {
        this.importProfile((data) => {
            const importedProfile = data;
            importedProfile.id = id ? id : this.getCurrentHighlightProfile().id;
            this.setHighlightProfile(this.getCurrentHighlightProfile(), importedProfile, id);
            this.logger.info(`Highlight profile [${importedProfile.id}] imported`);
        });
    }
    exportHighlightProfile(id) {
        this.exportProfile(id ? this.getHighlightProfileById(id) : this.getCurrentHighlightProfile());
        this.logger.info(`Highlight profile [${id ?? this.pluginConfig.highlightCurrentProfile}] exported`);
    }
    getReplaceProfiles(appendNil) {
        if (appendNil) {
            return [{ id: uuid__WEBPACK_IMPORTED_MODULE_7__["default"], name: this.translate.instant("Disable Replace") }].concat(this.pluginConfig.replaceProfiles);
        }
        return this.pluginConfig.replaceProfiles;
    }
    getCurrentReplaceProfile() {
        return this.getReplaceProfileById(this.pluginConfig.replaceCurrentProfile);
    }
    setCurrentReplaceProfileById(id) {
        this.pluginConfig.replaceCurrentProfile = id;
        this.logger.info(`Replace profile switched to [${id}]`);
        this.saveConfig();
    }
    getCurrentReplaceProfileIndex() {
        return this.getReplaceProfileIndexById(this.pluginConfig.replaceCurrentProfile);
    }
    setCurrentReplaceProfileByIndex(i) {
        this.setCurrentReplaceProfileById(this.pluginConfig.replaceProfiles[i].id);
    }
    getReplaceProfileIndexById(id) {
        let currentIndex = 0;
        const result = this.pluginConfig.replaceProfiles.find((value, index) => {
            currentIndex = index;
            return value.id === this.pluginConfig.replaceCurrentProfile;
        });
        return currentIndex;
    }
    getReplaceProfileById(id) {
        return this.pluginConfig.replaceProfiles.find((profile) => profile.id === id);
    }
    setReplaceProfile(profile, newProfile, targetId) {
        const targetProfile = targetId ? this.getReplaceProfileById(targetId) : profile;
        Object.assign(targetProfile, newProfile);
        this.logger.info(`Replace profile [${targetProfile.id}] modified`);
        this.saveConfig();
    }
    setReplaceProfileById(id, newProfile) {
        return this.setReplaceProfile(this.getReplaceProfileById(id), newProfile);
    }
    addReplacePattern(id) {
        const newPattern = {
            enabled: false,
            search: "INFO",
            replace: "信息",
        };
        const targetProfile = id ? this.getReplaceProfileById(id) : this.getCurrentReplaceProfile();
        targetProfile.patterns.unshift(newPattern);
        this.saveConfig();
    }
    delReplacePattern(i, id) {
        const targetProfile = id ? this.getReplaceProfileById(id) : this.getCurrentReplaceProfile();
        targetProfile.patterns.splice(i, 1);
        this.saveConfig();
    }
    addReplaceProfile() {
        const newProfile = {
            id: uuid__WEBPACK_IMPORTED_MODULE_8__["default"](),
            name: `Profile ${this.pluginConfig.replaceProfiles.length}`,
            patterns: [],
        };
        this.pluginConfig.replaceProfiles.push(newProfile);
        this.logger.info(`Replace profile [${newProfile.id}] added`);
        this.saveConfig();
        this.setCurrentReplaceProfileById(newProfile.id);
    }
    delReplaceProfile(profile) {
        const currentIndex = this.getCurrentReplaceProfile().id === profile.id
            ? this.getCurrentReplaceProfileIndex() - 1
            : this.getCurrentReplaceProfileIndex();
        this.pluginConfig.replaceProfiles = this.pluginConfig.replaceProfiles.filter((item) => item.id !== profile.id);
        this.logger.info(`Replace profile [${profile.id}] deleted`);
        this.saveConfig();
        this.setCurrentReplaceProfileByIndex(currentIndex);
    }
    importReplaceProfile(id) {
        this.importProfile((data) => {
            const importedProfile = data;
            importedProfile.id = id ? id : this.getCurrentReplaceProfile().id;
            this.setReplaceProfile(this.getCurrentReplaceProfile(), importedProfile, id);
            this.logger.info(`Replace profile [${importedProfile.id}] imported`);
        });
    }
    exportReplaceProfile(id) {
        this.exportProfile(id ? this.getReplaceProfileById(id) : this.getCurrentReplaceProfile());
        this.logger.info(`Replace profile [${id ?? this.pluginConfig.highlightCurrentProfile}] exported`);
    }
    importProfile(handler) {
        const paths = this.electron.dialog.showOpenDialogSync(this.hostWindow.getWindow(), {
            filters: [
                { name: "Profile", extensions: ["json"] },
                { name: "All Files", extensions: ["*"] },
            ],
            properties: ["openFile", "showHiddenFiles"],
        });
        if (paths && paths[0]) {
            const dataString = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(paths[0]);
            const dataJSON = dataString.toString();
            const data = JSON.parse(dataJSON);
            handler(data);
            this.saveConfig();
        }
    }
    async exportProfile(data) {
        let dataJSON = JSON.stringify(data);
        const result = await this.electron.dialog.showSaveDialog(this.hostWindow.getWindow(), {
            filters: [
                { name: "Profile", extensions: ["json"] },
                { name: "All Files", extensions: ["*"] },
            ],
            properties: ["openFile", "showHiddenFiles"],
        });
        if (!result?.canceled) {
            const file = fs__WEBPACK_IMPORTED_MODULE_1___default().writeFile(result.filePath, dataJSON, (err) => { });
        }
    }
    saveConfig() {
        this.config.save();
        this.logger.info(`Plugin settings saved`);
        this.applyPluginSettings();
    }
    injectProfilesToTab(tab, highlightProfile, replaceProfile) {
        tab.highlightProfile = highlightProfile;
        tab.replaceProfile = replaceProfile;
    }
    injectHighlightToTab(tab) {
        let highlightProfile;
        if (this.pluginConfig.highlightEnabled) {
            if (!highlightProfile && this.pluginConfig.highlightPerSessionEnabled) {
                highlightProfile = this.getHighlightProfileBySessionId(tab.profile.id);
            }
            if (!highlightProfile && this.pluginConfig.highlightPerSessionGroupEnabled) {
                highlightProfile = this.getHighlightProfileBySessionGroupId(tab.profile.group);
            }
            if (!highlightProfile && this.pluginConfig.highlightPerSessionTypeEnabled) {
                highlightProfile = this.getHighlightProfileBySessionTypeId(tab.profile.type);
            }
            if (!highlightProfile && this.pluginConfig.highlightGlobalEnabled) {
                highlightProfile = this.getCurrentHighlightProfile();
            }
        }
        let replaceProfile;
        if (this.pluginConfig.replaceEnabled) {
            if (!replaceProfile) {
                replaceProfile = this.getCurrentReplaceProfile();
            }
        }
        if (!highlightProfile && !replaceProfile) {
            return;
        }
        this.injectProfilesToTab(tab, highlightProfile, replaceProfile);
    }
    applyPluginSettings() {
        for (const tab of this.app.tabs) {
            if (tab instanceof tabby_core__WEBPACK_IMPORTED_MODULE_3__.SplitTabComponent) {
                for (const subTab of tab.getAllTabs()) {
                    if (subTab instanceof tabby_terminal__WEBPACK_IMPORTED_MODULE_5__.BaseTerminalTabComponent) {
                        this.injectHighlightToTab(subTab);
                    }
                }
            }
            else if (tab instanceof tabby_terminal__WEBPACK_IMPORTED_MODULE_5__.BaseTerminalTabComponent) {
                this.injectHighlightToTab(tab);
            }
        }
        this.logger.info(`Plugin settings applied`);
    }
    upgrade() {
        if (this.config.store.highlightPlugin.highlightKeywords) {
            this.config.store.highlightPlugin.highlightProfiles = [
                {
                    name: "Default",
                    keywords: this.config.store.highlightPlugin.highlightKeywords,
                },
            ];
            this.config.store.highlightPlugin.highlightKeywords = undefined;
            this.config.save();
            this.logger.info("profile upgrade finished.");
        }
        let profileIdNeedUpgrade = false;
        for (const profile of this.config.store.highlightPlugin.highlightProfiles) {
            if (!profile.id) {
                profileIdNeedUpgrade = true;
                profile.id = uuid__WEBPACK_IMPORTED_MODULE_8__["default"]();
            }
        }
        if (typeof this.config.store.highlightPlugin.highlightCurrentProfile === "number") {
            profileIdNeedUpgrade = true;
            this.config.store.highlightPlugin.highlightCurrentProfile =
                this.config.store.highlightPlugin.highlightProfiles[this.config.store.highlightPlugin.highlightCurrentProfile].id;
        }
        if (profileIdNeedUpgrade) {
            this.config.save();
            this.logger.info("profile id upgrade finished.");
        }
    }
};
HighlightService = __decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable)({ providedIn: "root" }),
    __metadata("design:paramtypes", [tabby_core__WEBPACK_IMPORTED_MODULE_3__.ConfigService,
        tabby_core__WEBPACK_IMPORTED_MODULE_3__.LogService, typeof (_a = typeof tabby_core__WEBPACK_IMPORTED_MODULE_3__.TranslateService !== "undefined" && tabby_core__WEBPACK_IMPORTED_MODULE_3__.TranslateService) === "function" ? _a : Object, tabby_electron__WEBPACK_IMPORTED_MODULE_4__.ElectronService,
        tabby_electron__WEBPACK_IMPORTED_MODULE_4__.ElectronHostWindow,
        ngx_toastr__WEBPACK_IMPORTED_MODULE_2__.ToastrService,
        tabby_core__WEBPACK_IMPORTED_MODULE_3__.AppService])
], HighlightService);



/***/ }),

/***/ "./src/profile-delete-modal.component.ts":
/*!***********************************************!*\
  !*** ./src/profile-delete-modal.component.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ProfileDeleteModalComponent: () => (/* binding */ ProfileDeleteModalComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "@angular/core");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "@ng-bootstrap/ng-bootstrap");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


let ProfileDeleteModalComponent = class ProfileDeleteModalComponent {
    modalInstance;
    prompt;
    constructor(modalInstance) {
        this.modalInstance = modalInstance;
    }
    async ngOnInit() { }
    ok() {
        this.modalInstance.close(true);
    }
    cancel() {
        this.modalInstance.close(false);
    }
};
__decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)(),
    __metadata("design:type", String)
], ProfileDeleteModalComponent.prototype, "prompt", void 0);
ProfileDeleteModalComponent = __decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component)({
        template: __webpack_require__(/*! ./profile-delete-modal.component.html */ "./src/profile-delete-modal.component.html"),
    }),
    __metadata("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__.NgbActiveModal])
], ProfileDeleteModalComponent);



/***/ }),

/***/ "./src/settings-tab.component.ts":
/*!***************************************!*\
  !*** ./src/settings-tab.component.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HighlightSettingsTabComponent: () => (/* binding */ HighlightSettingsTabComponent)
/* harmony export */ });
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/cdk/drag-drop */ "@angular/cdk/drag-drop");
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "@angular/core");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "@ng-bootstrap/ng-bootstrap");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "ngx-toastr");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ngx_toastr__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tabby-core */ "tabby-core");
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(tabby_core__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var tabby_electron__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tabby-electron */ "tabby-electron");
/* harmony import */ var tabby_electron__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(tabby_electron__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-node/nil.js");
/* harmony import */ var _highlight_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./highlight.service */ "./src/highlight.service.ts");
/* harmony import */ var _profile_delete_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./profile-delete-modal.component */ "./src/profile-delete-modal.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var _a;









let HighlightSettingsTabComponent = class HighlightSettingsTabComponent {
    config;
    electron;
    hostWindow;
    toastr;
    translate;
    ngbModal;
    sessionsService;
    highlightService;
    styles = [
        {
            name: "Background Color",
            enabledModel: "background",
            valueType: "number",
            valueModel: "backgroundColor",
            min: 0,
            max: 15,
        },
        {
            name: "Foreground Color",
            enabledModel: "foreground",
            valueType: "number",
            valueModel: "foregroundColor",
            min: 0,
            max: 15,
        },
        {
            name: "Bold",
            enabledModel: "bold",
        },
        {
            name: "Italic",
            enabledModel: "italic",
        },
        {
            name: "Underline",
            enabledModel: "underline",
        },
        {
            name: "Dim",
            enabledModel: "dim",
        },
    ];
    sessionTypes;
    alertMessage;
    alertType;
    verifyStatus;
    currentTheme;
    pluginConfig;
    uuidNIL = uuid__WEBPACK_IMPORTED_MODULE_8__["default"];
    constructor(config, electron, hostWindow, toastr, translate, ngbModal, sessionsService, highlightService) {
        this.config = config;
        this.electron = electron;
        this.hostWindow = hostWindow;
        this.toastr = toastr;
        this.translate = translate;
        this.ngbModal = ngbModal;
        this.sessionsService = sessionsService;
        this.highlightService = highlightService;
        this.currentTheme = this.config.store.appearance.colorSchemeMode;
        this.pluginConfig = this.config.store.highlightPlugin;
        this.verify();
    }
    sessions;
    sessionGroups;
    async ngOnInit() {
        this.sessions = await this.sessionsService.getProfiles();
        this.sessionGroups = await this.sessionsService.getProfileGroups();
        this.sessionTypes = [...new Set(this.sessions.map((item) => item.type))];
    }
    apply() {
        this.highlightService.saveConfig();
        this.verify();
    }
    verify() {
        this.highlightVerify();
        this.replaceVerify();
    }
    get currentHighlightProfileIndex() {
        return this.highlightService.getCurrentHighlightProfileIndex();
    }
    set currentHighlightProfileIndex(value) {
        this.highlightService.setCurrentHighlightProfileByIndex(value);
    }
    importHighlightProfile(id) {
        this.highlightService.importHighlightProfile(id);
        this.verify();
    }
    exportHighlightProfile(id) {
        this.highlightService.exportHighlightProfile(id);
    }
    highlightVerify() {
        this.verifyStatus = [];
        for (const profile of this.pluginConfig.highlightProfiles) {
            const { keywords } = profile;
            const profileStatus = [];
            for (const keyword of keywords) {
                let status = true;
                let errInfo = "";
                const { isRegExp, text } = keyword;
                if (isRegExp) {
                    try {
                        const regexp = new RegExp(text, "g");
                    }
                    catch (e) {
                        errInfo = e.message;
                        status = false;
                    }
                }
                profileStatus.push([status, errInfo]);
            }
            this.verifyStatus.push(profileStatus);
        }
    }
    dropKeyword(event) {
        (0,_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__.moveItemInArray)(this.highlightService.getCurrentHighlightProfile().keywords, event.previousIndex, event.currentIndex);
        this.apply();
    }
    dropProfile(event) {
        (0,_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__.moveItemInArray)(this.highlightService.getHighlightProfiles(), event.previousIndex, event.currentIndex);
        this.apply();
    }
    getAnsiColorById(id) {
        const schema = this.currentTheme === "light" ? "lightColorScheme" : "colorScheme";
        const colorSchema = this.config.store.terminal[schema].colors;
        return colorSchema[id];
    }
    getForegroundColor(item) {
        if (item.foreground !== undefined) {
            if (item.foregroundColor !== undefined) {
                return this.getAnsiColorById(Number.parseInt(item.foregroundColor));
            }
            return this.getAnsiColorById(1);
        }
        return this.getAnsiColorById(0);
    }
    getBackgroundColor(item) {
        if (item.background !== undefined) {
            if (item.backgroundColor !== undefined) {
                return this.getAnsiColorById(Number.parseInt(item.backgroundColor));
            }
            return this.getAnsiColorById(1);
        }
        return "transparent";
    }
    addHighlightProfile(event) {
        event.preventDefault();
        this.highlightService.addHighlightProfile();
        this.verify();
    }
    async delHighlightProfile(event, profile) {
        if (this.highlightService.getHighlightProfiles().length > 1) {
            const modal = this.ngbModal.open(_profile_delete_modal_component__WEBPACK_IMPORTED_MODULE_7__.ProfileDeleteModalComponent);
            modal.componentInstance.prompt = `${this.translate.instant("Delete")} ${profile.name}${this.translate.instant("?")}`;
            try {
                const result = await modal.result.catch(() => null);
                if (result === true) {
                    this.highlightService.delHighlightProfile(profile);
                    this.verify();
                }
            }
            catch { }
        }
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    addKeyword() {
        this.highlightService.addHighlightKeyword();
        this.verify();
    }
    delKeyword(i) {
        this.highlightService.delHighlightKeyword(i);
        this.verify();
    }
    onHighlightProfileChange(changeEvent) {
        this.currentHighlightProfileIndex = changeEvent.nextId;
        this.verify();
    }
    async renameHighlightProfile(event, profile) {
        const modal = this.ngbModal.open(tabby_core__WEBPACK_IMPORTED_MODULE_4__.PromptModalComponent);
        modal.componentInstance.prompt = this.translate.instant("Profile name");
        modal.componentInstance.value = profile.name;
        modal.componentInstance.password = false;
        try {
            const result = await modal.result.catch(() => null);
            if (result?.value) {
                profile.name = result.value;
                this.apply();
            }
        }
        catch { }
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    addHighlightPerSessionProfileMap() {
        this.highlightService.addHighlightPerSessionProfileMap();
    }
    delPerSessionProfile(i) {
        this.highlightService.delHighlightPerSessionProfileMapByIndex(i);
    }
    addHighlightPerSessionGroupProfile() {
        this.highlightService.addHighlightPerSessionGroupProfileMap();
    }
    delPerSessionGroupProfile(i) {
        this.highlightService.delHighlightPerSessionGroupProfileMapByIndex(i);
    }
    addHighlightPerSessionTypeProfile() {
        this.highlightService.addHighlightPerSessionTypeProfileMap();
    }
    delPerSessionTypeProfile(i) {
        this.highlightService.delHighlightPerSessionTypeProfileMapByIndex(i);
    }
    getSessions(sessionId) {
        if (!this.sessions) {
            return [];
        }
        return this.sessions.filter((all) => !this.pluginConfig.highlightPerSessionProfileMap.some((exist) => exist.sessionId === all.id) || all.id === sessionId);
    }
    getSessionGroups(groupId) {
        if (!this.sessionGroups) {
            return [];
        }
        return this.sessionGroups.filter((all) => !this.pluginConfig.highlightPerSessionGroupProfileMap.some((exist) => exist.groupId === all.id) || all.id === groupId);
    }
    getSessionTypes(typeId) {
        if (!this.sessions) {
            return [];
        }
        return this.sessionTypes.filter((all) => !this.pluginConfig.highlightPerSessionTypeProfileMap.some((exist) => exist.typeId === all) || all === typeId);
    }
    get currentReplaceProfileIndex() {
        return this.highlightService.getCurrentReplaceProfileIndex();
    }
    set currentReplaceProfileIndex(value) {
        this.highlightService.setCurrentReplaceProfileByIndex(value);
    }
    replaceVerifyStatus;
    replaceVerify() {
        this.replaceVerifyStatus = [];
        for (const profile of this.pluginConfig.replaceProfiles) {
            const { patterns } = profile;
            const profileStatus = [];
            for (const pattern of patterns) {
                let status = true;
                let errInfo = "";
                const { isRegExp, search } = pattern;
                if (isRegExp) {
                    try {
                        const regexp = new RegExp(search, "g");
                    }
                    catch (e) {
                        errInfo = e.message;
                        status = false;
                    }
                }
                profileStatus.push([status, errInfo]);
            }
            this.replaceVerifyStatus.push(profileStatus);
        }
    }
    onReplaceProfileChange(changeEvent) {
        this.currentReplaceProfileIndex = changeEvent.nextId;
        this.apply();
    }
    dropReplaceProfile(event) {
        (0,_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__.moveItemInArray)(this.pluginConfig.replaceProfiles, event.previousIndex, event.currentIndex);
        this.apply();
    }
    dropReplacePattern(event) {
        (0,_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_0__.moveItemInArray)(this.pluginConfig.replaceProfiles[this.currentReplaceProfileIndex].patterns, event.previousIndex, event.currentIndex);
        this.apply();
    }
    addReplaceProfile(event) {
        event.preventDefault();
        this.highlightService.addReplaceProfile();
        this.verify();
    }
    async delReplaceProfile(event, profile) {
        if (this.highlightService.getReplaceProfiles().length > 1) {
            const modal = this.ngbModal.open(_profile_delete_modal_component__WEBPACK_IMPORTED_MODULE_7__.ProfileDeleteModalComponent);
            modal.componentInstance.prompt = `${this.translate.instant("Delete")} ${profile.name}${this.translate.instant("?")}`;
            try {
                const result = await modal.result.catch(() => null);
                if (result === true) {
                    this.highlightService.delReplaceProfile(profile);
                }
            }
            catch { }
        }
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    async renameReplaceProfile(event, profile) {
        const modal = this.ngbModal.open(tabby_core__WEBPACK_IMPORTED_MODULE_4__.PromptModalComponent);
        modal.componentInstance.prompt = this.translate.instant("Profile name");
        modal.componentInstance.value = profile.name;
        modal.componentInstance.password = false;
        try {
            const result = await modal.result.catch(() => null);
            if (result?.value) {
                profile.name = result.value;
                this.apply();
            }
        }
        catch { }
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    addReplacePattern() {
        this.highlightService.addReplacePattern();
        this.verify();
    }
    delReplacePattern(i) {
        this.highlightService.delReplacePattern(i);
        this.verify();
    }
    importReplaceProfile(id) {
        this.highlightService.importReplaceProfile(id);
        this.verify();
    }
    exportReplaceProfile(id) {
        this.highlightService.exportReplaceProfile(id);
    }
};
HighlightSettingsTabComponent = __decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({
        template: __webpack_require__(/*! ./settings-tab.component.html */ "./src/settings-tab.component.html"),
        styles: [
            `
      .list-group-item-highlight {
        --bs-list-group-bg: rgba(0, 0, 0, 0.25);
        --bs-list-group-action-hover-bg: rgba(0, 0, 0, 0.65);
        // backdrop-filter: blur(3px);
      }
      .close {
        // font-size: 1.4rem;
        opacity: 0.1;
        transition: opacity 0.3s;
      }
      .nav-link:hover > .close {
        opacity: 0.8;
      }
      .add-button {
        opacity: 0.4;
      }
      .add-button:hover {
        opacity: 0.9;
      }
    `,
        ],
    }),
    __metadata("design:paramtypes", [tabby_core__WEBPACK_IMPORTED_MODULE_4__.ConfigService,
        tabby_electron__WEBPACK_IMPORTED_MODULE_5__.ElectronService,
        tabby_electron__WEBPACK_IMPORTED_MODULE_5__.ElectronHostWindow,
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__.ToastrService, typeof (_a = typeof tabby_core__WEBPACK_IMPORTED_MODULE_4__.TranslateService !== "undefined" && tabby_core__WEBPACK_IMPORTED_MODULE_4__.TranslateService) === "function" ? _a : Object, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__.NgbModal,
        tabby_core__WEBPACK_IMPORTED_MODULE_4__.ProfilesService,
        _highlight_service__WEBPACK_IMPORTED_MODULE_6__.HighlightService])
], HighlightSettingsTabComponent);



/***/ }),

/***/ "./src/settings-tab.provider.ts":
/*!**************************************!*\
  !*** ./src/settings-tab.provider.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HighlightSettingsTabProvider: () => (/* binding */ HighlightSettingsTabProvider)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "@angular/core");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tabby_settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tabby-settings */ "tabby-settings");
/* harmony import */ var tabby_settings__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tabby_settings__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _settings_tab_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings-tab.component */ "./src/settings-tab.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



let HighlightSettingsTabProvider = class HighlightSettingsTabProvider extends tabby_settings__WEBPACK_IMPORTED_MODULE_1__.SettingsTabProvider {
    id = "tabby-highlight";
    icon = "fa-solid fa-highlighter";
    title = "Highlight";
    constructor() {
        super();
    }
    getComponentType() {
        return _settings_tab_component__WEBPACK_IMPORTED_MODULE_2__.HighlightSettingsTabComponent;
    }
};
HighlightSettingsTabProvider = __decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable)(),
    __metadata("design:paramtypes", [])
], HighlightSettingsTabProvider);



/***/ }),

/***/ "./src/translations.ts":
/*!*****************************!*\
  !*** ./src/translations.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   translations: () => (/* binding */ translations)
/* harmony export */ });
const translations = [
    [
        "zh-CN",
        {
            "Highlight": "高亮",
            "Enable highlight": "启用高亮",
            "Highlight master switch": "高亮总开关",
            "Change any setting of highlight only apply in new sessions.": "任何对高亮设置的修改只会应用到新会话。",
            "Change any setting of replace only apply in new sessions.": "任何对替换设置的修改只会应用到新会话。",
            "Highlight applied!": "高亮已应用！",
            "ON": "开",
            "Keyword": "关键字",
            "Foreground Color": "前景色",
            "Background Color": "背景色",
            "DEL": "删除",
            "RegExp": "正则",
            "Case sensitive": "区分大小写",
            "[Highlight] Something wrong when creating RegExp, please check highlight settings": "[高亮] 创建正则表达式时出现错误，请检查高亮配置",
            "The following regexp is not valid:\n": "下面的正则表达式有问题：\n",
            "Everything looks good.": "一切正常。",
            "Style": "样式",
            "Bold": "粗体",
            "Italic": "斜体",
            "Underline": "下划线",
            "Dim": "变暗",
            "Case": "大小写",
            "Import": "导入",
            "Drag the ON button may reorder the keyword.": "拖动开关可以对关键字排序。",
            "Drag the ON button may reorder the pattern.": "拖动开关可以对模式排序。",
            "Profile name": "配置名称",
            "Active tab is the global highlight profile.": "活动标签页是全局生效的高亮配置。",
            "Double click tab can change profile name.": "双击标签页头可以更改配置名称。",
            "Keyword on top get high priority.": "最上面的关键字优先级最高。",
            "?": "？",
            "Enable per session profile": "启用单会话高亮配置",
            "Enable per session group profile": "启用单会话分组高亮配置",
            "Enable per session type profile": "启用单会话类型高亮配置",
            "Enable global profile": "启用全局高亮配置",
            "No session selected": "未选择会话",
            "Disable Highlight": "禁用高亮",
            "Global profile is the active tab below": "全局配置是下方激活的标签页",
            "Profile": "配置",
            "Session": "会话",
            "Session Group": "会话分组",
            "Session Type": "会话类型",
            "No session group selected": "未选择会话分组",
            "No session type selected": "未选择会话类型",
            "The profile selection order is session > group > type > global.": "高亮配置选择顺序是：会话 > 会话分组 > 会话类型 > 全局",
            "Enable replace": "启用替换",
            "Replace master switch": "替换总开关",
            "Search Pattern": "查找模式",
            "Replace Pattern": "替换模式",
            "[Highlight] Can not change session profile due to per session profile not enabled": "[高亮] 无法在未启用单会话配置的情况下修改会话配置",
            "Replacement processed from top to end.": "替换是从上往下处理的。",
            'If you want to add a new line, add "\\n" to the replace pattern.': "如果想要添加新行，在替换模式中添加\\n即可。",
            "Disable replace in alternate screen": "在备用屏幕中禁用替换",
            "Disable highlight in alternate screen": "在备用屏幕中禁用高亮",
            "For example: vi/vim": "例如：vi/vim",
            "Extra settings": "额外设置",
            "Match group": "匹配组",
            "Styles": "样式",
            "Remark": "备注",
        },
    ],
];


/***/ }),

/***/ "./node_modules/utils-decorators/dist/esm/debounce/debounce.js":
/*!*********************************************************************!*\
  !*** ./node_modules/utils-decorators/dist/esm/debounce/debounce.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   debounce: () => (/* binding */ debounce)
/* harmony export */ });
/* harmony import */ var _debouncify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debouncify */ "./node_modules/utils-decorators/dist/esm/debounce/debouncify.js");

function debounce(delayMs) {
    return (target, propertyName, descriptor) => {
        if (descriptor.value) {
            const methodsMap = new WeakMap();
            const originalMethod = descriptor.value;
            descriptor.value = function (...args) {
                if (!methodsMap.has(this)) {
                    methodsMap.set(this, (0,_debouncify__WEBPACK_IMPORTED_MODULE_0__.debouncify)(originalMethod, delayMs).bind(this));
                }
                methodsMap.get(this)(...args);
            };
            return descriptor;
        }
        throw new Error('@debounce is applicable only on a methods.');
    };
}
//# sourceMappingURL=debounce.js.map

/***/ }),

/***/ "./node_modules/utils-decorators/dist/esm/debounce/debouncify.js":
/*!***********************************************************************!*\
  !*** ./node_modules/utils-decorators/dist/esm/debounce/debouncify.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   debouncify: () => (/* binding */ debouncify)
/* harmony export */ });
function debouncify(originalMethod, delayMs) {
    let handler;
    return function (...args) {
        clearTimeout(handler);
        handler = setTimeout(() => {
            originalMethod.apply(this, args);
        }, delayMs);
    };
}
//# sourceMappingURL=debouncify.js.map

/***/ }),

/***/ "./node_modules/uuid/dist/esm-node/native.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/native.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ "crypto");
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  randomUUID: (crypto__WEBPACK_IMPORTED_MODULE_0___default().randomUUID)
});

/***/ }),

/***/ "./node_modules/uuid/dist/esm-node/nil.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/nil.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');

/***/ }),

/***/ "./node_modules/uuid/dist/esm-node/regex.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/regex.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-node/rng.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/rng.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rng)
/* harmony export */ });
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ "crypto");
/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);

const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate

let poolPtr = rnds8Pool.length;
function rng() {
  if (poolPtr > rnds8Pool.length - 16) {
    crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);
    poolPtr = 0;
  }

  return rnds8Pool.slice(poolPtr, poolPtr += 16);
}

/***/ }),

/***/ "./node_modules/uuid/dist/esm-node/stringify.js":
/*!******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/stringify.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   unsafeStringify: () => (/* binding */ unsafeStringify)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "./node_modules/uuid/dist/esm-node/validate.js");

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

const byteToHex = [];

for (let i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).slice(1));
}

function unsafeStringify(arr, offset = 0) {
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];
}

function stringify(arr, offset = 0) {
  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-node/v4.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v4.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ "./node_modules/uuid/dist/esm-node/native.js");
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ "./node_modules/uuid/dist/esm-node/rng.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/uuid/dist/esm-node/stringify.js");




function v4(options, buf, offset) {
  if (_native_js__WEBPACK_IMPORTED_MODULE_0__["default"].randomUUID && !buf && !options) {
    return _native_js__WEBPACK_IMPORTED_MODULE_0__["default"].randomUUID();
  }

  options = options || {};
  const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (let i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-node/validate.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/validate.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ "./node_modules/uuid/dist/esm-node/regex.js");


function validate(uuid) {
  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__["default"].test(uuid);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "@angular/cdk/drag-drop":
/*!*****************************************!*\
  !*** external "@angular/cdk/drag-drop" ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__angular_cdk_drag_drop__;

/***/ }),

/***/ "@angular/common":
/*!**********************************!*\
  !*** external "@angular/common" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__angular_common__;

/***/ }),

/***/ "@angular/core":
/*!********************************!*\
  !*** external "@angular/core" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__angular_core__;

/***/ }),

/***/ "@angular/forms":
/*!*********************************!*\
  !*** external "@angular/forms" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__angular_forms__;

/***/ }),

/***/ "@ng-bootstrap/ng-bootstrap":
/*!*********************************************!*\
  !*** external "@ng-bootstrap/ng-bootstrap" ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__ng_bootstrap_ng_bootstrap__;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_fs__;

/***/ }),

/***/ "ngx-toastr":
/*!*****************************!*\
  !*** external "ngx-toastr" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_ngx_toastr__;

/***/ }),

/***/ "tabby-core":
/*!*****************************!*\
  !*** external "tabby-core" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_tabby_core__;

/***/ }),

/***/ "tabby-electron":
/*!*********************************!*\
  !*** external "tabby-electron" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_tabby_electron__;

/***/ }),

/***/ "tabby-settings":
/*!*********************************!*\
  !*** external "tabby-settings" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_tabby_settings__;

/***/ }),

/***/ "tabby-terminal":
/*!*********************************!*\
  !*** external "tabby-terminal" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_tabby_terminal__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "@angular/common");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_angular_common__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "@angular/core");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_angular_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "@angular/forms");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_angular_forms__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "@ng-bootstrap/ng-bootstrap");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tabby-core */ "tabby-core");
/* harmony import */ var tabby_core__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(tabby_core__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var tabby_settings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tabby-settings */ "tabby-settings");
/* harmony import */ var tabby_settings__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(tabby_settings__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tabby-terminal */ "tabby-terminal");
/* harmony import */ var tabby_terminal__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(tabby_terminal__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _config_provider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./config.provider */ "./src/config.provider.ts");
/* harmony import */ var _highlight_decorator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./highlight.decorator */ "./src/highlight.decorator.ts");
/* harmony import */ var _highlight_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./highlight.service */ "./src/highlight.service.ts");
/* harmony import */ var _settings_tab_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./settings-tab.component */ "./src/settings-tab.component.ts");
/* harmony import */ var _settings_tab_provider__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./settings-tab.provider */ "./src/settings-tab.provider.ts");
/* harmony import */ var _context_menu_provider__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./context-menu.provider */ "./src/context-menu.provider.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













let HighlightModule = class HighlightModule {
    config;
    highlight;
    constructor(config, highlight) {
        this.config = config;
        this.highlight = highlight;
    }
};
HighlightModule = __decorate([
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_0__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_2__.FormsModule, (tabby_core__WEBPACK_IMPORTED_MODULE_4___default()), _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__.NgbModule],
        providers: [
            { provide: tabby_core__WEBPACK_IMPORTED_MODULE_4__.ConfigProvider, useClass: _config_provider__WEBPACK_IMPORTED_MODULE_7__.HighlightConfigProvider, multi: true },
            { provide: tabby_settings__WEBPACK_IMPORTED_MODULE_5__.SettingsTabProvider, useClass: _settings_tab_provider__WEBPACK_IMPORTED_MODULE_11__.HighlightSettingsTabProvider, multi: true },
            { provide: tabby_terminal__WEBPACK_IMPORTED_MODULE_6__.TerminalDecorator, useClass: _highlight_decorator__WEBPACK_IMPORTED_MODULE_8__.HighlightDecorator, multi: true },
            { provide: tabby_core__WEBPACK_IMPORTED_MODULE_4__.TabContextMenuItemProvider, useClass: _context_menu_provider__WEBPACK_IMPORTED_MODULE_12__.HighlightContextMenu, multi: true },
        ],
        entryComponents: [_settings_tab_component__WEBPACK_IMPORTED_MODULE_10__.HighlightSettingsTabComponent],
        declarations: [_settings_tab_component__WEBPACK_IMPORTED_MODULE_10__.HighlightSettingsTabComponent],
    }),
    __metadata("design:paramtypes", [tabby_core__WEBPACK_IMPORTED_MODULE_4__.ConfigService, _highlight_service__WEBPACK_IMPORTED_MODULE_9__.HighlightService])
], HighlightModule);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HighlightModule);

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=index.js.map