{"version":3,"file":"index.js","mappings":"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","sources":["webpack-tabby-background:///webpack/universalModuleDefinition","webpack-tabby-background:///./src/settings-tab.component.html","webpack-tabby-background:///./src/background.service.ts","webpack-tabby-background:///./src/config.provider.ts","webpack-tabby-background:///./src/settings-tab.component.ts","webpack-tabby-background:///./src/settings-tab.provider.ts","webpack-tabby-background:///./src/translations.ts","webpack-tabby-background:///./node_modules/uuid/dist/esm-node/native.js","webpack-tabby-background:///./node_modules/uuid/dist/esm-node/nil.js","webpack-tabby-background:///./node_modules/uuid/dist/esm-node/regex.js","webpack-tabby-background:///./node_modules/uuid/dist/esm-node/rng.js","webpack-tabby-background:///./node_modules/uuid/dist/esm-node/stringify.js","webpack-tabby-background:///./node_modules/uuid/dist/esm-node/v4.js","webpack-tabby-background:///./node_modules/uuid/dist/esm-node/validate.js","webpack-tabby-background:///external node-commonjs \"crypto\"","webpack-tabby-background:///external umd \"@angular/cdk/drag-drop\"","webpack-tabby-background:///external umd \"@angular/common\"","webpack-tabby-background:///external umd \"@angular/core\"","webpack-tabby-background:///external umd \"@angular/forms\"","webpack-tabby-background:///external umd \"@ng-bootstrap/ng-bootstrap\"","webpack-tabby-background:///external umd \"fs\"","webpack-tabby-background:///external umd \"ngx-toastr\"","webpack-tabby-background:///external umd \"tabby-core\"","webpack-tabby-background:///external umd \"tabby-electron\"","webpack-tabby-background:///external umd \"tabby-settings\"","webpack-tabby-background:///webpack/bootstrap","webpack-tabby-background:///webpack/runtime/compat get default export","webpack-tabby-background:///webpack/runtime/define property getters","webpack-tabby-background:///webpack/runtime/hasOwnProperty shorthand","webpack-tabby-background:///webpack/runtime/make namespace object","webpack-tabby-background:///./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/common\"), require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@ng-bootstrap/ng-bootstrap\"), require(\"tabby-core\"), require(\"tabby-settings\"), require(\"fs\"), require(\"@angular/cdk/drag-drop\"), require(\"ngx-toastr\"), require(\"tabby-electron\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/common\", \"@angular/core\", \"@angular/forms\", \"@ng-bootstrap/ng-bootstrap\", \"tabby-core\", \"tabby-settings\", \"fs\", \"@angular/cdk/drag-drop\", \"ngx-toastr\", \"tabby-electron\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"@angular/common\"), require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@ng-bootstrap/ng-bootstrap\"), require(\"tabby-core\"), require(\"tabby-settings\"), require(\"fs\"), require(\"@angular/cdk/drag-drop\"), require(\"ngx-toastr\"), require(\"tabby-electron\")) : factory(root[\"@angular/common\"], root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@ng-bootstrap/ng-bootstrap\"], root[\"tabby-core\"], root[\"tabby-settings\"], root[\"fs\"], root[\"@angular/cdk/drag-drop\"], root[\"ngx-toastr\"], root[\"tabby-electron\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, (__WEBPACK_EXTERNAL_MODULE__angular_common__, __WEBPACK_EXTERNAL_MODULE__angular_core__, __WEBPACK_EXTERNAL_MODULE__angular_forms__, __WEBPACK_EXTERNAL_MODULE__ng_bootstrap_ng_bootstrap__, __WEBPACK_EXTERNAL_MODULE_tabby_core__, __WEBPACK_EXTERNAL_MODULE_tabby_settings__, __WEBPACK_EXTERNAL_MODULE_fs__, __WEBPACK_EXTERNAL_MODULE__angular_cdk_drag_drop__, __WEBPACK_EXTERNAL_MODULE_ngx_toastr__, __WEBPACK_EXTERNAL_MODULE_tabby_electron__) => {\nreturn ","// Module\nvar code = \"<h3 translate>Background</h3>\\n<ul class=\\\"nav-tabs\\\" ngbNav #nav=\\\"ngbNav\\\">\\n  <li ngbNavItem>\\n    <a ngbNavLink translate>Background</a>\\n    <ng-template ngbNavContent>\\n      <div class=\\\"form-line\\\">\\n        <div class=\\\"header\\\">\\n          <div class=\\\"title\\\" translate>Enable background</div>\\n          <div class=\\\"description\\\" translate>Background image master switch</div>\\n        </div>\\n        <toggle [(ngModel)]=\\\"pluginConfig.backgroundEnabled\\\" (ngModelChange)=\\\"apply()\\\"> </toggle>\\n      </div>\\n\\n      <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.backgroundEnabled === true\\\">\\n        <div class=\\\"form-line\\\">\\n          <div class=\\\"header\\\">\\n            <div class=\\\"title\\\" translate>Background mode</div>\\n            <div class=\\\"description\\\" translate>Background mode</div>\\n          </div>\\n          <select\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"pluginConfig.backgroundMode\\\"\\n            (ngModelChange)=\\\"apply()\\\"\\n          >\\n            <option [ngValue]=\\\"'simple'\\\" translate>Simple</option>\\n            <option [ngValue]=\\\"'advanced'\\\" translate>Advanced</option>\\n          </select>\\n        </div>\\n        <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.backgroundMode === 'simple'\\\">\\n          <div class=\\\"form-line\\\">\\n            <div class=\\\"header\\\">\\n              <div class=\\\"title\\\" translate>Background path</div>\\n              <div class=\\\"description\\\" translate>Relative path begins with ../../../data</div>\\n            </div>\\n            <div class=\\\"input-group w-50\\\">\\n              <input\\n                class=\\\"form-control\\\"\\n                type=\\\"text\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundPath\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n              />\\n              <button class=\\\"btn btn-secondary\\\" (click)=\\\"pickFile()\\\">\\n                <i class=\\\"fas fa-folder-open\\\"> </i>\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"form-line\\\">\\n            <div class=\\\"header\\\">\\n              <div class=\\\"title\\\" translate>Background show type</div>\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n              <input\\n                class=\\\"btn-check\\\"\\n                type=\\\"radio\\\"\\n                name=\\\"backgroundShowType\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundShowType\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n                id=\\\"showTypeFullscreen\\\"\\n                [value]=\\\"'fullscreen'\\\"\\n              />\\n              <label class=\\\"btn btn-secondary\\\" for=\\\"showTypeFullscreen\\\">\\n                <span translate>Fullscreen</span>\\n              </label>\\n              <input\\n                class=\\\"btn-check\\\"\\n                type=\\\"radio\\\"\\n                name=\\\"backgroundShowType\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundShowType\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n                id=\\\"showTypeFullscreenFloat\\\"\\n                [value]=\\\"'float'\\\"\\n              />\\n              <label class=\\\"btn btn-secondary\\\" for=\\\"showTypeFullscreenFloat\\\">\\n                <span translate>Float</span>\\n              </label>\\n            </div>\\n          </div>\\n          <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.backgroundShowType === 'fullscreen'\\\">\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>Fullscreen type</div>\\n              </div>\\n              <div class=\\\"btn-group\\\">\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"backgroundFullscreenType\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFullscreenType\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"fullscreenTypeContain\\\"\\n                  [value]=\\\"'contain'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"fullscreenTypeContain\\\">\\n                  <span translate>Contain</span>\\n                </label>\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"backgroundFullscreenType\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFullscreenType\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"fullscreenTypeCover\\\"\\n                  [value]=\\\"'cover'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"fullscreenTypeCover\\\">\\n                  <span translate>Cover</span>\\n                </label>\\n              </div>\\n            </div>\\n            <div class=\\\"form-line\\\" *ngIf=\\\"pluginConfig.backgroundFullscreenType === 'contain'\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>Repeat type</div>\\n              </div>\\n              <div class=\\\"btn-group\\\">\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"backgroundFullscreenRepeatType\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFullscreenRepeatType\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"fullscreenRepeatTypeRepeat\\\"\\n                  [value]=\\\"'repeat'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"fullscreenRepeatTypeRepeat\\\">\\n                  <span translate>Repeat</span>\\n                </label>\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"backgroundFullscreenRepeatType\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFullscreenRepeatType\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"fullscreenRepeatTypeNoRepeat\\\"\\n                  [value]=\\\"'no-repeat'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"fullscreenRepeatTypeNoRepeat\\\">\\n                  <span translate>No Repeat</span>\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.backgroundShowType === 'float'\\\">\\n            <h4 translate>Float Parameters</h4>\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>Float size</div>\\n                <div class=\\\"description\\\" translate>Unit: px</div>\\n              </div>\\n              <input\\n                class=\\\"me-3\\\"\\n                type=\\\"range\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundFloatSize\\\"\\n                (mouseup)=\\\"apply()\\\"\\n                min=\\\"0\\\"\\n                max=\\\"1000\\\"\\n                step=\\\"1\\\"\\n              />\\n              <button\\n                class=\\\"btn btn-outline-secondary me-3\\\"\\n                (click)=\\\"pluginConfig.backgroundFloatSize = 300; apply()\\\"\\n              >\\n                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n              </button>\\n              <input\\n                class=\\\"form-control param-input\\\"\\n                type=\\\"number\\\"\\n                min=\\\"0\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundFloatSize\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>Float X offset</div>\\n                <div class=\\\"description\\\" translate>Unit: px</div>\\n              </div>\\n              <input\\n                class=\\\"me-3\\\"\\n                type=\\\"range\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundFloatX\\\"\\n                (mouseup)=\\\"apply()\\\"\\n                min=\\\"-100\\\"\\n                max=\\\"1000\\\"\\n                step=\\\"1\\\"\\n              />\\n              <button\\n                class=\\\"btn btn-outline-secondary me-3\\\"\\n                (click)=\\\"pluginConfig.backgroundFloatX = 0; apply()\\\"\\n              >\\n                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n              </button>\\n              <input\\n                class=\\\"form-control param-input\\\"\\n                type=\\\"number\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundFloatX\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>Float Y offset</div>\\n                <div class=\\\"description\\\" translate>Unit: px</div>\\n              </div>\\n              <input\\n                class=\\\"me-3\\\"\\n                type=\\\"range\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundFloatY\\\"\\n                (mouseup)=\\\"apply()\\\"\\n                min=\\\"-100\\\"\\n                max=\\\"1000\\\"\\n                step=\\\"1\\\"\\n              />\\n              <button\\n                class=\\\"btn btn-outline-secondary me-3\\\"\\n                (click)=\\\"pluginConfig.backgroundFloatY = 0; apply()\\\"\\n              >\\n                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n              </button>\\n              <input\\n                class=\\\"form-control param-input\\\"\\n                type=\\\"number\\\"\\n                [(ngModel)]=\\\"pluginConfig.backgroundFloatY\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n              />\\n            </div>\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>Float X align</div>\\n              </div>\\n              <div class=\\\"btn-group\\\">\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"floatXAlign\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFloatXAlign\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"floatXAlignLeft\\\"\\n                  [value]=\\\"'left'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"floatXAlignLeft\\\">\\n                  <span translate>Left</span>\\n                </label>\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"floatXAlign\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFloatXAlign\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"floatXAlignCenter\\\"\\n                  [value]=\\\"'center'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"floatXAlignCenter\\\">\\n                  <span translate>Center</span>\\n                </label>\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"floatXAlign\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFloatXAlign\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"floatXAlignRight\\\"\\n                  [value]=\\\"'right'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"floatXAlignRight\\\">\\n                  <span translate>Right</span>\\n                </label>\\n              </div>\\n            </div>\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>Float Y align</div>\\n              </div>\\n              <div class=\\\"btn-group\\\">\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"floatYAlign\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFloatYAlign\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"floatYAlignTop\\\"\\n                  [value]=\\\"'top'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"floatYAlignTop\\\">\\n                  <span translate>Top</span>\\n                </label>\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"floatYAlign\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFloatYAlign\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"floatYAlignCenter\\\"\\n                  [value]=\\\"'center'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"floatYAlignCenter\\\">\\n                  <span translate>Center</span>\\n                </label>\\n                <input\\n                  class=\\\"btn-check\\\"\\n                  type=\\\"radio\\\"\\n                  name=\\\"floatYAlign\\\"\\n                  [(ngModel)]=\\\"pluginConfig.backgroundFloatYAlign\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                  id=\\\"floatYAlignBottom\\\"\\n                  [value]=\\\"'bottom'\\\"\\n                />\\n                <label class=\\\"btn btn-secondary\\\" for=\\\"floatYAlignBottom\\\">\\n                  <span translate>Bottom</span>\\n                </label>\\n              </div>\\n            </div>\\n            <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.backgroundShowType === 'float'\\\">\\n              <h4 translate>Drop Shadow Parameters</h4>\\n              <div class=\\\"form-line\\\">\\n                <div class=\\\"header\\\">\\n                  <div class=\\\"title\\\" translate>Enable drop shadow</div>\\n                  <div class=\\\"description\\\"></div>\\n                </div>\\n                <toggle\\n                  [(ngModel)]=\\\"pluginConfig.backgroundDropShadowEnabled\\\"\\n                  (ngModelChange)=\\\"apply()\\\"\\n                >\\n                </toggle>\\n              </div>\\n              <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.backgroundDropShadowEnabled === true\\\">\\n                <div class=\\\"form-line\\\">\\n                  <div class=\\\"header\\\">\\n                    <div class=\\\"title\\\" translate>Drop shadow X offset</div>\\n                    <div class=\\\"description\\\" translate>Unit: px</div>\\n                  </div>\\n                  <input\\n                    class=\\\"me-3\\\"\\n                    type=\\\"range\\\"\\n                    [(ngModel)]=\\\"pluginConfig.backgroundDropShadowX\\\"\\n                    (mouseup)=\\\"apply()\\\"\\n                    min=\\\"-200\\\"\\n                    max=\\\"200\\\"\\n                    step=\\\"1\\\"\\n                  />\\n                  <button\\n                    class=\\\"btn btn-outline-secondary me-3\\\"\\n                    (click)=\\\"pluginConfig.backgroundDropShadowX = 0; apply()\\\"\\n                  >\\n                    <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                  </button>\\n                  <input\\n                    class=\\\"form-control param-input\\\"\\n                    type=\\\"number\\\"\\n                    [(ngModel)]=\\\"pluginConfig.backgroundDropShadowX\\\"\\n                    (ngModelChange)=\\\"apply()\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-line\\\">\\n                  <div class=\\\"header\\\">\\n                    <div class=\\\"title\\\" translate>Drop shadow Y offset</div>\\n                    <div class=\\\"description\\\" translate>Unit: px</div>\\n                  </div>\\n                  <input\\n                    class=\\\"me-3\\\"\\n                    type=\\\"range\\\"\\n                    [(ngModel)]=\\\"pluginConfig.backgroundDropShadowY\\\"\\n                    (mouseup)=\\\"apply()\\\"\\n                    min=\\\"-200\\\"\\n                    max=\\\"200\\\"\\n                    step=\\\"1\\\"\\n                  />\\n                  <button\\n                    class=\\\"btn btn-outline-secondary me-3\\\"\\n                    (click)=\\\"pluginConfig.backgroundDropShadowY = 0; apply()\\\"\\n                  >\\n                    <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                  </button>\\n                  <input\\n                    class=\\\"form-control param-input\\\"\\n                    type=\\\"number\\\"\\n                    [(ngModel)]=\\\"pluginConfig.backgroundDropShadowY\\\"\\n                    (ngModelChange)=\\\"apply()\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-line\\\">\\n                  <div class=\\\"header\\\">\\n                    <div class=\\\"title\\\" translate>Drop shadow blur</div>\\n                    <div class=\\\"description\\\" translate>Unit: px</div>\\n                  </div>\\n                  <input\\n                    class=\\\"me-3\\\"\\n                    type=\\\"range\\\"\\n                    [(ngModel)]=\\\"pluginConfig.backgroundDropShadowBlur\\\"\\n                    (mouseup)=\\\"apply()\\\"\\n                    min=\\\"0\\\"\\n                    max=\\\"100\\\"\\n                    step=\\\"0.1\\\"\\n                  />\\n                  <button\\n                    class=\\\"btn btn-outline-secondary me-3\\\"\\n                    (click)=\\\"pluginConfig.backgroundDropShadowBlur = 0; apply()\\\"\\n                  >\\n                    <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                  </button>\\n                  <input\\n                    class=\\\"form-control param-input\\\"\\n                    type=\\\"number\\\"\\n                    min=\\\"0\\\"\\n                    max=\\\"100\\\"\\n                    step=\\\"0.1\\\"\\n                    [(ngModel)]=\\\"pluginConfig.backgroundDropShadowBlur\\\"\\n                    (ngModelChange)=\\\"apply()\\\"\\n                  />\\n                </div>\\n                <div class=\\\"form-line\\\">\\n                  <div class=\\\"header\\\">\\n                    <div class=\\\"title\\\" translate>Drop shadow color</div>\\n                    <div class=\\\"description\\\" translate>\\n                      Use RGBA (#FF0000A0) or color name(red, green, ...)\\n                    </div>\\n                  </div>\\n                  <input\\n                    class=\\\"form-control font-family-input\\\"\\n                    type=\\\"text\\\"\\n                    [(ngModel)]=\\\"pluginConfig.backgroundDropShadowColor\\\"\\n                    (ngModelChange)=\\\"apply()\\\"\\n                  />\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"h4\\\" translate>Background Filters</div>\\n          <ng-container *ngFor=\\\"let item of filters\\\">\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>{{ item.title }}</div>\\n                <div class=\\\"description\\\" translate>{{ item.description }}</div>\\n              </div>\\n              <input\\n                class=\\\"me-3\\\"\\n                type=\\\"range\\\"\\n                [(ngModel)]=\\\"pluginConfig[item.model]\\\"\\n                (mouseup)=\\\"apply()\\\"\\n                [min]=\\\"item.min\\\"\\n                [max]=\\\"item.max\\\"\\n                [step]=\\\"item.step\\\"\\n              />\\n              <button\\n                class=\\\"btn btn-outline-secondary me-3\\\"\\n                (click)=\\\"pluginConfig[item.model] = item.default; apply()\\\"\\n              >\\n                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n              </button>\\n              <input\\n                class=\\\"form-control param-input\\\"\\n                type=\\\"number\\\"\\n                [(ngModel)]=\\\"pluginConfig[item.model]\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n                [min]=\\\"item.min\\\"\\n                [max]=\\\"item.max\\\"\\n                [step]=\\\"item.step\\\"\\n              />\\n            </div>\\n          </ng-container>\\n          <div class=\\\"h4\\\" translate>Extra Settings</div>\\n          <ng-container *ngFor=\\\"let item of extraSettings\\\">\\n            <div class=\\\"form-line\\\">\\n              <div class=\\\"header\\\">\\n                <div class=\\\"title\\\" translate>{{ item.title }}</div>\\n                <div class=\\\"description\\\" translate>{{ item.description }}</div>\\n              </div>\\n              <input\\n                class=\\\"me-3\\\"\\n                type=\\\"range\\\"\\n                [(ngModel)]=\\\"pluginConfig[item.model]\\\"\\n                (mouseup)=\\\"apply()\\\"\\n                [min]=\\\"item.min\\\"\\n                [max]=\\\"item.max\\\"\\n                [step]=\\\"item.step\\\"\\n              />\\n              <button\\n                class=\\\"btn btn-outline-secondary me-3\\\"\\n                (click)=\\\"pluginConfig[item.model] = item.default; apply()\\\"\\n              >\\n                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n              </button>\\n              <input\\n                class=\\\"form-control param-input\\\"\\n                type=\\\"number\\\"\\n                [(ngModel)]=\\\"pluginConfig[item.model]\\\"\\n                (ngModelChange)=\\\"apply()\\\"\\n                [min]=\\\"item.min\\\"\\n                [max]=\\\"item.max\\\"\\n                [step]=\\\"item.step\\\"\\n              />\\n            </div>\\n          </ng-container>\\n        </div>\\n        <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.backgroundMode === 'advanced'\\\">\\n          <div class=\\\"form-line\\\">\\n            <div class=\\\"header\\\">\\n              <div class=\\\"title\\\" translate>Background switch type</div>\\n              <div class=\\\"description\\\" translate>When switch background</div>\\n            </div>\\n            <select\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"pluginConfig.backgroundAdvancedSwitchType\\\"\\n              (ngModelChange)=\\\"apply()\\\"\\n            >\\n              <option [ngValue]=\\\"'slideshow'\\\" translate>Slideshow</option>\\n              <!-- <option [ngValue]=\\\"'session'\\\" translate>New Session</option> -->\\n            </select>\\n          </div>\\n          <div class=\\\"form-line\\\" *ngIf=\\\"pluginConfig.backgroundAdvancedSwitchType === 'slideshow'\\\">\\n            <div class=\\\"header\\\">\\n              <div class=\\\"title\\\" translate>Slideshow interval</div>\\n              <div class=\\\"description\\\" translate>Slideshow interval (second)</div>\\n            </div>\\n            <input\\n              class=\\\"me-3\\\"\\n              type=\\\"range\\\"\\n              [(ngModel)]=\\\"pluginConfig.backgroundAdvancedSlideshowInterval\\\"\\n              (mouseup)=\\\"apply()\\\"\\n              [min]=\\\"5\\\"\\n              [max]=\\\"604800\\\"\\n              [step]=\\\"1\\\"\\n            />\\n            <button\\n              class=\\\"btn btn-outline-secondary me-3\\\"\\n              (click)=\\\"pluginConfig.backgroundAdvancedSlideshowInterval = 3600; apply()\\\"\\n            >\\n              <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n            </button>\\n            <input\\n              class=\\\"form-control param-input\\\"\\n              type=\\\"number\\\"\\n              [(ngModel)]=\\\"pluginConfig.backgroundAdvancedSlideshowInterval\\\"\\n              (ngModelChange)=\\\"apply()\\\"\\n              [min]=\\\"5\\\"\\n              [max]=\\\"604800\\\"\\n              [step]=\\\"1\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-line\\\">\\n            <div class=\\\"header\\\">\\n              <div class=\\\"title\\\" translate>Background choose type</div>\\n              <div class=\\\"description\\\" translate>How to choose background</div>\\n            </div>\\n            <select\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"pluginConfig.backgroundAdvancedChooseType\\\"\\n              (ngModelChange)=\\\"apply()\\\"\\n            >\\n              <option [ngValue]=\\\"'sequence'\\\" translate>Sequence</option>\\n              <option [ngValue]=\\\"'reverse'\\\" translate>Reverse</option>\\n              <option [ngValue]=\\\"'random'\\\" translate>Random</option>\\n            </select>\\n          </div>\\n\\n          <div class=\\\"d-flex w-100\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"addBackground()\\\">\\n              <i class=\\\"fas fa-solid fa-plus\\\"></i>\\n              <span translate>Add</span>\\n            </button>\\n            <div class=\\\"flex-grow-1\\\"></div>\\n            <!-- <button class=\\\"btn btn-primary\\\" (click)=\\\"importBackgroundAdvancedSettings()\\\">\\n              <i class=\\\"fas fa-solid fa-file-import\\\"></i>\\n              <span translate>Import</span>\\n            </button>\\n            <button class=\\\"btn btn-primary ms-2\\\" (click)=\\\"exportBackgroundAdvancedSettings()\\\">\\n              <i class=\\\"fas fa-solid fa-file-export\\\"></i>\\n              <span translate>Export</span>\\n            </button> -->\\n          </div>\\n          <div\\n            class=\\\"list-group mt-3 mb-3\\\"\\n            cdkDropList\\n            (cdkDropListDropped)=\\\"dropBackgroundItem($event)\\\"\\n          >\\n            <div class=\\\"container list-group-item active align-items-center\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col col-1 gx-1\\\">\\n                  <button class=\\\"btn border-0\\\" disabled>\\n                    <i class=\\\"fa-solid fa-toggle-on\\\"></i>\\n                  </button>\\n                </div>\\n                <div class=\\\"col col-1 gx-1\\\">\\n                  <button class=\\\"btn border-0\\\" disabled>\\n                    <i class=\\\"fa-regular fa-folder-open\\\"></i>\\n                  </button>\\n                </div>\\n                <div class=\\\"col col-2 gx-1 d-flex justify-content-center align-items-center\\\">\\n                  <span class=\\\"text-center\\\" translate>Name</span>\\n                </div>\\n                <div class=\\\"col gx-1 d-flex justify-content-center align-items-center\\\">\\n                  <span class=\\\"text-center\\\" translate>Background path</span>\\n                </div>\\n                <div class=\\\"col col-auto gx-1\\\">\\n                  <button\\n                    class=\\\"btn border border-dark\\\"\\n                    style=\\\"width: 60px; --bs-border-opacity: 0\\\"\\n                    disabled\\n                  >\\n                    <i class=\\\"fa-solid fa-palette\\\"></i>\\n                  </button>\\n                </div>\\n                <div class=\\\"col col-auto gx-1\\\">\\n                  <button class=\\\"btn border border-dark\\\" style=\\\"--bs-border-opacity: 0\\\" disabled>\\n                    <i class=\\\"fa-solid fa-magnifying-glass\\\"></i>\\n                  </button>\\n                </div>\\n                <div class=\\\"col col-auto gx-1\\\">\\n                  <button class=\\\"btn border border-dark\\\" style=\\\"--bs-border-opacity: 0\\\" disabled>\\n                    <i class=\\\"fa-solid fa-trash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n            <ng-container *ngFor=\\\"let item of pluginConfig.backgrounds; let i = index\\\">\\n              <div\\n                class=\\\"container list-group-item align-items-center list-group-item-action list-group-item-background\\\"\\n                cdkDrag\\n              >\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col col-1 gx-1 d-flex justify-content-center align-items-center\\\">\\n                    <toggle cdkDragHandle [(ngModel)]=\\\"item.enabled\\\" (ngModelChange)=\\\"apply()\\\">\\n                    </toggle>\\n                  </div>\\n                  <div class=\\\"col col-1 gx-1 d-flex justify-content-center align-items-center\\\">\\n                    <checkbox [(ngModel)]=\\\"item.isFolder\\\" (ngModelChange)=\\\"apply()\\\"> </checkbox>\\n                  </div>\\n                  <div class=\\\"col col-2 gx-1\\\">\\n                    <input\\n                      class=\\\"form-control\\\"\\n                      style=\\\"background-color: rgba(0, 0, 0, 0.3); backdrop-filter: blur(3px)\\\"\\n                      type=\\\"text\\\"\\n                      [(ngModel)]=\\\"item.name\\\"\\n                      (ngModelChange)=\\\"apply()\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"col gx-1\\\">\\n                    <div class=\\\"input-group\\\">\\n                      <input\\n                        class=\\\"form-control\\\"\\n                        style=\\\"background-color: rgba(0, 0, 0, 0.3); backdrop-filter: blur(3px)\\\"\\n                        type=\\\"text\\\"\\n                        [(ngModel)]=\\\"item.backgroundPath\\\"\\n                        (ngModelChange)=\\\"apply()\\\"\\n                      />\\n                      <button class=\\\"btn btn-secondary\\\" (click)=\\\"pickFile(item)\\\">\\n                        <i class=\\\"fas fa-folder-open\\\"> </i>\\n                      </button>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col col-auto gx-1 d-flex justify-content-center align-items-center\\\">\\n                    <div ngbDropdown container=\\\"body\\\" placement=\\\"top-right\\\">\\n                      <button\\n                        class=\\\"btn btn-outline-primary\\\"\\n                        style=\\\"width: 60px\\\"\\n                        ngbDropdownToggle\\n                        (click)=\\\"$event.stopPropagation()\\\"\\n                      >\\n                        <i class=\\\"fa-solid fa-palette\\\"></i>\\n                      </button>\\n                      <div\\n                        class=\\\"border border-black\\\"\\n                        ngbDropdownMenu\\n                        style=\\\"\\n                          min-width: 450px;\\n                          max-height: 300px;\\n                          overflow: scroll;\\n                          background-color: rgba(0, 0, 0, 0.3);\\n                          backdrop-filter: blur(3px);\\n                        \\\"\\n                      >\\n                        <div class=\\\"container-fluid\\\">\\n                          <div class=\\\"form-line\\\">\\n                            <div class=\\\"header\\\">\\n                              <div class=\\\"title\\\" translate>Background show type</div>\\n                            </div>\\n                            <div class=\\\"btn-group\\\">\\n                              <input\\n                                class=\\\"btn-check\\\"\\n                                type=\\\"radio\\\"\\n                                name=\\\"backgroundShowType-{{ i }}\\\"\\n                                [(ngModel)]=\\\"item.backgroundShowType\\\"\\n                                (ngModelChange)=\\\"apply()\\\"\\n                                id=\\\"showTypeFullscreen-{{ i }}\\\"\\n                                [value]=\\\"'fullscreen'\\\"\\n                              />\\n                              <label class=\\\"btn btn-secondary\\\" for=\\\"showTypeFullscreen-{{ i }}\\\">\\n                                <span translate>Fullscreen</span>\\n                              </label>\\n                              <input\\n                                class=\\\"btn-check\\\"\\n                                type=\\\"radio\\\"\\n                                name=\\\"backgroundShowType-{{ i }}\\\"\\n                                [(ngModel)]=\\\"item.backgroundShowType\\\"\\n                                (ngModelChange)=\\\"apply()\\\"\\n                                id=\\\"showTypeFullscreenFloat-{{ i }}\\\"\\n                                [value]=\\\"'float'\\\"\\n                              />\\n                              <label\\n                                class=\\\"btn btn-secondary\\\"\\n                                for=\\\"showTypeFullscreenFloat-{{ i }}\\\"\\n                              >\\n                                <span translate>Float</span>\\n                              </label>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"content-box\\\" *ngIf=\\\"item.backgroundShowType === 'fullscreen'\\\">\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>Fullscreen type</div>\\n                              </div>\\n                              <div class=\\\"btn-group\\\">\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"backgroundFullscreenType-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFullscreenType\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"fullscreenTypeContain-{{ i }}\\\"\\n                                  [value]=\\\"'contain'\\\"\\n                                />\\n                                <label\\n                                  class=\\\"btn btn-secondary\\\"\\n                                  for=\\\"fullscreenTypeContain-{{ i }}\\\"\\n                                >\\n                                  <span translate>Contain</span>\\n                                </label>\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"backgroundFullscreenType-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFullscreenType\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"fullscreenTypeCover-{{ i }}\\\"\\n                                  [value]=\\\"'cover'\\\"\\n                                />\\n                                <label class=\\\"btn btn-secondary\\\" for=\\\"fullscreenTypeCover-{{ i }}\\\">\\n                                  <span translate>Cover</span>\\n                                </label>\\n                              </div>\\n                            </div>\\n                            <div\\n                              class=\\\"form-line\\\"\\n                              *ngIf=\\\"item.backgroundFullscreenType === 'contain'\\\"\\n                            >\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>Repeat type</div>\\n                              </div>\\n                              <div class=\\\"btn-group\\\">\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"backgroundFullscreenRepeatType-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFullscreenRepeatType\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"fullscreenRepeatTypeRepeat-{{ i }}\\\"\\n                                  [value]=\\\"'repeat'\\\"\\n                                />\\n                                <label\\n                                  class=\\\"btn btn-secondary\\\"\\n                                  for=\\\"fullscreenRepeatTypeRepeat-{{ i }}\\\"\\n                                >\\n                                  <span translate>Repeat</span>\\n                                </label>\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"backgroundFullscreenRepeatType-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFullscreenRepeatType\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"fullscreenRepeatTypeNoRepeat-{{ i }}\\\"\\n                                  [value]=\\\"'no-repeat'\\\"\\n                                />\\n                                <label\\n                                  class=\\\"btn btn-secondary\\\"\\n                                  for=\\\"fullscreenRepeatTypeNoRepeat-{{ i }}\\\"\\n                                >\\n                                  <span translate>No Repeat</span>\\n                                </label>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"content-box\\\" *ngIf=\\\"item.backgroundShowType === 'float'\\\">\\n                            <h4 translate>Float Parameters</h4>\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>Float size</div>\\n                                <div class=\\\"description\\\" translate>Unit: px</div>\\n                              </div>\\n                              <input\\n                                class=\\\"me-3\\\"\\n                                type=\\\"range\\\"\\n                                [(ngModel)]=\\\"item.backgroundFloatSize\\\"\\n                                (mouseup)=\\\"apply()\\\"\\n                                min=\\\"0\\\"\\n                                max=\\\"1000\\\"\\n                                step=\\\"1\\\"\\n                              />\\n                              <button\\n                                class=\\\"btn btn-outline-secondary me-3\\\"\\n                                (click)=\\\"item.backgroundFloatSize = 300; apply()\\\"\\n                              >\\n                                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                              </button>\\n                              <input\\n                                class=\\\"form-control param-input\\\"\\n                                type=\\\"number\\\"\\n                                min=\\\"0\\\"\\n                                [(ngModel)]=\\\"item.backgroundFloatSize\\\"\\n                                (ngModelChange)=\\\"apply()\\\"\\n                              />\\n                            </div>\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>Float X offset</div>\\n                                <div class=\\\"description\\\" translate>Unit: px</div>\\n                              </div>\\n                              <input\\n                                class=\\\"me-3\\\"\\n                                type=\\\"range\\\"\\n                                [(ngModel)]=\\\"item.backgroundFloatX\\\"\\n                                (mouseup)=\\\"apply()\\\"\\n                                min=\\\"-100\\\"\\n                                max=\\\"1000\\\"\\n                                step=\\\"1\\\"\\n                              />\\n                              <button\\n                                class=\\\"btn btn-outline-secondary me-3\\\"\\n                                (click)=\\\"item.backgroundFloatX = 0; apply()\\\"\\n                              >\\n                                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                              </button>\\n                              <input\\n                                class=\\\"form-control param-input\\\"\\n                                type=\\\"number\\\"\\n                                [(ngModel)]=\\\"item.backgroundFloatX\\\"\\n                                (ngModelChange)=\\\"apply()\\\"\\n                              />\\n                            </div>\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>Float Y offset</div>\\n                                <div class=\\\"description\\\" translate>Unit: px</div>\\n                              </div>\\n                              <input\\n                                class=\\\"me-3\\\"\\n                                type=\\\"range\\\"\\n                                [(ngModel)]=\\\"item.backgroundFloatY\\\"\\n                                (mouseup)=\\\"apply()\\\"\\n                                min=\\\"-100\\\"\\n                                max=\\\"1000\\\"\\n                                step=\\\"1\\\"\\n                              />\\n                              <button\\n                                class=\\\"btn btn-outline-secondary me-3\\\"\\n                                (click)=\\\"item.backgroundFloatY = 0; apply()\\\"\\n                              >\\n                                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                              </button>\\n                              <input\\n                                class=\\\"form-control param-input\\\"\\n                                type=\\\"number\\\"\\n                                [(ngModel)]=\\\"item.backgroundFloatY\\\"\\n                                (ngModelChange)=\\\"apply()\\\"\\n                              />\\n                            </div>\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>Float X align</div>\\n                              </div>\\n                              <div class=\\\"btn-group\\\">\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"floatXAlign-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFloatXAlign\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"floatXAlignLeft-{{ i }}\\\"\\n                                  [value]=\\\"'left'\\\"\\n                                />\\n                                <label class=\\\"btn btn-secondary\\\" for=\\\"floatXAlignLeft-{{ i }}\\\">\\n                                  <span translate>Left</span>\\n                                </label>\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"floatXAlign-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFloatXAlign\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"floatXAlignCenter-{{ i }}\\\"\\n                                  [value]=\\\"'center'\\\"\\n                                />\\n                                <label class=\\\"btn btn-secondary\\\" for=\\\"floatXAlignCenter-{{ i }}\\\">\\n                                  <span translate>Center</span>\\n                                </label>\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"floatXAlign-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFloatXAlign\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"floatXAlignRight-{{ i }}\\\"\\n                                  [value]=\\\"'right'\\\"\\n                                />\\n                                <label class=\\\"btn btn-secondary\\\" for=\\\"floatXAlignRight-{{ i }}\\\">\\n                                  <span translate>Right</span>\\n                                </label>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>Float Y align</div>\\n                              </div>\\n                              <div class=\\\"btn-group\\\">\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"floatYAlign-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFloatYAlign\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"floatYAlignTop-{{ i }}\\\"\\n                                  [value]=\\\"'top'\\\"\\n                                />\\n                                <label class=\\\"btn btn-secondary\\\" for=\\\"floatYAlignTop-{{ i }}\\\">\\n                                  <span translate>Top</span>\\n                                </label>\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"floatYAlign-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFloatYAlign\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"floatYAlignCenter-{{ i }}\\\"\\n                                  [value]=\\\"'center'\\\"\\n                                />\\n                                <label class=\\\"btn btn-secondary\\\" for=\\\"floatYAlignCenter-{{ i }}\\\">\\n                                  <span translate>Center</span>\\n                                </label>\\n                                <input\\n                                  class=\\\"btn-check\\\"\\n                                  type=\\\"radio\\\"\\n                                  name=\\\"floatYAlign-{{ i }}\\\"\\n                                  [(ngModel)]=\\\"item.backgroundFloatYAlign\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                  id=\\\"floatYAlignBottom-{{ i }}\\\"\\n                                  [value]=\\\"'bottom'\\\"\\n                                />\\n                                <label class=\\\"btn btn-secondary\\\" for=\\\"floatYAlignBottom-{{ i }}\\\">\\n                                  <span translate>Bottom</span>\\n                                </label>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"content-box\\\" *ngIf=\\\"item.backgroundShowType === 'float'\\\">\\n                              <h4 translate>Drop Shadow Parameters</h4>\\n                              <div class=\\\"form-line\\\">\\n                                <div class=\\\"header\\\">\\n                                  <div class=\\\"title\\\" translate>Enable drop shadow</div>\\n                                  <div class=\\\"description\\\"></div>\\n                                </div>\\n                                <toggle\\n                                  [(ngModel)]=\\\"item.backgroundDropShadowEnabled\\\"\\n                                  (ngModelChange)=\\\"apply()\\\"\\n                                >\\n                                </toggle>\\n                              </div>\\n                              <div\\n                                class=\\\"content-box\\\"\\n                                *ngIf=\\\"item.backgroundDropShadowEnabled === true\\\"\\n                              >\\n                                <div class=\\\"form-line\\\">\\n                                  <div class=\\\"header\\\">\\n                                    <div class=\\\"title\\\" translate>Drop shadow X offset</div>\\n                                    <div class=\\\"description\\\" translate>Unit: px</div>\\n                                  </div>\\n                                  <input\\n                                    class=\\\"me-3\\\"\\n                                    type=\\\"range\\\"\\n                                    [(ngModel)]=\\\"item.backgroundDropShadowX\\\"\\n                                    (mouseup)=\\\"apply()\\\"\\n                                    min=\\\"-200\\\"\\n                                    max=\\\"200\\\"\\n                                    step=\\\"1\\\"\\n                                  />\\n                                  <button\\n                                    class=\\\"btn btn-outline-secondary me-3\\\"\\n                                    (click)=\\\"item.backgroundDropShadowX = 0; apply()\\\"\\n                                  >\\n                                    <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                                  </button>\\n                                  <input\\n                                    class=\\\"form-control param-input\\\"\\n                                    type=\\\"number\\\"\\n                                    [(ngModel)]=\\\"item.backgroundDropShadowX\\\"\\n                                    (ngModelChange)=\\\"apply()\\\"\\n                                  />\\n                                </div>\\n                                <div class=\\\"form-line\\\">\\n                                  <div class=\\\"header\\\">\\n                                    <div class=\\\"title\\\" translate>Drop shadow Y offset</div>\\n                                    <div class=\\\"description\\\" translate>Unit: px</div>\\n                                  </div>\\n                                  <input\\n                                    class=\\\"me-3\\\"\\n                                    type=\\\"range\\\"\\n                                    [(ngModel)]=\\\"item.backgroundDropShadowY\\\"\\n                                    (mouseup)=\\\"apply()\\\"\\n                                    min=\\\"-200\\\"\\n                                    max=\\\"200\\\"\\n                                    step=\\\"1\\\"\\n                                  />\\n                                  <button\\n                                    class=\\\"btn btn-outline-secondary me-3\\\"\\n                                    (click)=\\\"item.backgroundDropShadowY = 0; apply()\\\"\\n                                  >\\n                                    <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                                  </button>\\n                                  <input\\n                                    class=\\\"form-control param-input\\\"\\n                                    type=\\\"number\\\"\\n                                    [(ngModel)]=\\\"item.backgroundDropShadowY\\\"\\n                                    (ngModelChange)=\\\"apply()\\\"\\n                                  />\\n                                </div>\\n                                <div class=\\\"form-line\\\">\\n                                  <div class=\\\"header\\\">\\n                                    <div class=\\\"title\\\" translate>Drop shadow blur</div>\\n                                    <div class=\\\"description\\\" translate>Unit: px</div>\\n                                  </div>\\n                                  <input\\n                                    class=\\\"me-3\\\"\\n                                    type=\\\"range\\\"\\n                                    [(ngModel)]=\\\"item.backgroundDropShadowBlur\\\"\\n                                    (mouseup)=\\\"apply()\\\"\\n                                    min=\\\"0\\\"\\n                                    max=\\\"100\\\"\\n                                    step=\\\"0.1\\\"\\n                                  />\\n                                  <button\\n                                    class=\\\"btn btn-outline-secondary me-3\\\"\\n                                    (click)=\\\"item.backgroundDropShadowBlur = 0; apply()\\\"\\n                                  >\\n                                    <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                                  </button>\\n                                  <input\\n                                    class=\\\"form-control param-input\\\"\\n                                    type=\\\"number\\\"\\n                                    min=\\\"0\\\"\\n                                    max=\\\"100\\\"\\n                                    step=\\\"0.1\\\"\\n                                    [(ngModel)]=\\\"item.backgroundDropShadowBlur\\\"\\n                                    (ngModelChange)=\\\"apply()\\\"\\n                                  />\\n                                </div>\\n                                <div class=\\\"form-line\\\">\\n                                  <div class=\\\"header\\\">\\n                                    <div class=\\\"title\\\" translate>Drop shadow color</div>\\n                                    <div class=\\\"description\\\" translate>\\n                                      Use RGBA (#FF0000A0) or color name(red, green, ...)\\n                                    </div>\\n                                  </div>\\n                                  <input\\n                                    class=\\\"form-control\\\"\\n                                    style=\\\"width: 120px\\\"\\n                                    type=\\\"text\\\"\\n                                    [(ngModel)]=\\\"item.backgroundDropShadowColor\\\"\\n                                    (ngModelChange)=\\\"apply()\\\"\\n                                  />\\n                                </div>\\n                              </div>\\n                            </div>\\n                          </div>\\n                          <div class=\\\"h4\\\" translate>Background Filters</div>\\n                          <ng-container *ngFor=\\\"let filter of filters\\\">\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>{{ filter.title }}</div>\\n                                <div class=\\\"description\\\" translate>{{ filter.description }}</div>\\n                              </div>\\n                              <input\\n                                class=\\\"me-3\\\"\\n                                type=\\\"range\\\"\\n                                [(ngModel)]=\\\"item[filter.model]\\\"\\n                                (mouseup)=\\\"apply()\\\"\\n                                [min]=\\\"filter.min\\\"\\n                                [max]=\\\"filter.max\\\"\\n                                [step]=\\\"filter.step\\\"\\n                              />\\n                              <button\\n                                class=\\\"btn btn-outline-secondary me-3\\\"\\n                                (click)=\\\"item[filter.model] = filter.default; apply()\\\"\\n                              >\\n                                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                              </button>\\n                              <input\\n                                class=\\\"form-control param-input\\\"\\n                                type=\\\"number\\\"\\n                                [(ngModel)]=\\\"item[filter.model]\\\"\\n                                (ngModelChange)=\\\"apply()\\\"\\n                                [min]=\\\"filter.min\\\"\\n                                [max]=\\\"filter.max\\\"\\n                                [step]=\\\"filter.step\\\"\\n                              />\\n                            </div>\\n                          </ng-container>\\n                          <div class=\\\"h4\\\" translate>Extra Settings</div>\\n                          <ng-container *ngFor=\\\"let extra of extraSettings\\\">\\n                            <div class=\\\"form-line\\\">\\n                              <div class=\\\"header\\\">\\n                                <div class=\\\"title\\\" translate>{{ extra.title }}</div>\\n                                <div class=\\\"description\\\" translate>{{ extra.description }}</div>\\n                              </div>\\n                              <input\\n                                class=\\\"me-3\\\"\\n                                type=\\\"range\\\"\\n                                [(ngModel)]=\\\"item[extra.model]\\\"\\n                                (mouseup)=\\\"apply()\\\"\\n                                [min]=\\\"extra.min\\\"\\n                                [max]=\\\"extra.max\\\"\\n                                [step]=\\\"extra.step\\\"\\n                              />\\n                              <button\\n                                class=\\\"btn btn-outline-secondary me-3\\\"\\n                                (click)=\\\"item[extra.model] = extra.default; apply()\\\"\\n                              >\\n                                <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n                              </button>\\n                              <input\\n                                class=\\\"form-control param-input\\\"\\n                                type=\\\"number\\\"\\n                                [(ngModel)]=\\\"item[extra.model]\\\"\\n                                (ngModelChange)=\\\"apply()\\\"\\n                                [min]=\\\"extra.min\\\"\\n                                [max]=\\\"extra.max\\\"\\n                                [step]=\\\"extra.step\\\"\\n                              />\\n                            </div>\\n                          </ng-container>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col col-auto gx-1 d-flex justify-content-center align-items-center\\\">\\n                    <button\\n                      [disabled]=\\\"item.isFolder === true\\\"\\n                      class=\\\"btn btn-outline-secondary\\\"\\n                      (click)=\\\"previewBackground(i)\\\"\\n                    >\\n                      <i class=\\\"fa-solid fa-magnifying-glass\\\"></i>\\n                    </button>\\n                  </div>\\n                  <div class=\\\"col col-auto gx-1 d-flex justify-content-center align-items-center\\\">\\n                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"delBackground(i)\\\">\\n                      <i class=\\\"fa-solid fa-trash\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </li>\\n  <li ngbNavItem>\\n    <a ngbNavLink translate>UI Font</a>\\n    <ng-template ngbNavContent>\\n      <div class=\\\"form-line\\\">\\n        <div class=\\\"header\\\">\\n          <div class=\\\"title\\\" translate>Enable UI font replace</div>\\n          <div class=\\\"description\\\" translate>\\n            Do not affect the terminal font in the [appearance] configuration\\n          </div>\\n        </div>\\n        <toggle [(ngModel)]=\\\"pluginConfig.uiFontEnabled\\\" (ngModelChange)=\\\"apply()\\\"> </toggle>\\n      </div>\\n      <div class=\\\"content-box\\\" *ngIf=\\\"pluginConfig.uiFontEnabled === true\\\">\\n        <div class=\\\"form-line\\\">\\n          <div class=\\\"header\\\">\\n            <div class=\\\"title\\\" translate>UI Font Family</div>\\n          </div>\\n          <div class=\\\"input-group w-75\\\">\\n            <input\\n              class=\\\"form-control font-family-input\\\"\\n              type=\\\"text\\\"\\n              [(ngModel)]=\\\"pluginConfig.uiFontFamily\\\"\\n              (ngModelChange)=\\\"apply()\\\"\\n            />\\n            <input\\n              class=\\\"form-control font-size-input\\\"\\n              type=\\\"number\\\"\\n              min=\\\"5\\\"\\n              max=\\\"48\\\"\\n              [(ngModel)]=\\\"pluginConfig.uiFontSize\\\"\\n              (ngModelChange)=\\\"apply()\\\"\\n            />\\n          </div>\\n        </div>\\n        <div class=\\\"form-line\\\">\\n          <div class=\\\"header\\\">\\n            <div class=\\\"title\\\" translate>Fix close button font</div>\\n            <div class=\\\"description\\\" translate>Restore the tab closing button to default font</div>\\n          </div>\\n          <toggle [(ngModel)]=\\\"pluginConfig.uiFontTabBarCloseBtnFix\\\" (ngModelChange)=\\\"apply()\\\">\\n          </toggle>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </li>\\n  <li ngbNavItem>\\n    <a ngbNavLink translate>Others</a>\\n    <ng-template ngbNavContent>\\n      <ng-container *ngFor=\\\"let item of others\\\">\\n        <div class=\\\"form-line\\\">\\n          <div class=\\\"header\\\">\\n            <div class=\\\"title\\\" translate>{{ item.title }}</div>\\n            <div class=\\\"description\\\" translate>{{ item.description }}</div>\\n          </div>\\n          <input\\n            class=\\\"me-3\\\"\\n            type=\\\"range\\\"\\n            [(ngModel)]=\\\"pluginConfig[item.model]\\\"\\n            (mouseup)=\\\"apply()\\\"\\n            [min]=\\\"item.min\\\"\\n            [max]=\\\"item.max\\\"\\n            [step]=\\\"item.step\\\"\\n          />\\n          <button\\n            class=\\\"btn btn-outline-secondary me-3\\\"\\n            (click)=\\\"pluginConfig[item.model] = item.default; apply()\\\"\\n          >\\n            <i class=\\\"fas fa-solid fa-rotate-left\\\"> </i>\\n          </button>\\n          <input\\n            class=\\\"form-control param-input\\\"\\n            type=\\\"number\\\"\\n            [(ngModel)]=\\\"pluginConfig[item.model]\\\"\\n            (ngModelChange)=\\\"apply()\\\"\\n            [min]=\\\"item.min\\\"\\n            [max]=\\\"item.max\\\"\\n            [step]=\\\"item.step\\\"\\n          />\\n        </div>\\n      </ng-container>\\n    </ng-template>\\n  </li>\\n</ul>\\n<div [ngbNavOutlet]=\\\"nav\\\"></div>\\n\";\n// Exports\nmodule.exports = code;","import { Injectable } from \"@angular/core\";\nimport { ConfigService, LogService, Logger, TranslateService } from \"tabby-core\";\nimport {\n  AdvancedBackground,\n  Background,\n  BackgroundPluginConfig,\n  DefaultBackground,\n} from \"./config.provider\";\nimport { translations } from \"./translations\";\nimport * as uuid from \"uuid\";\nimport { readdirSync } from \"fs\";\n\ntype SlideShowItem = {\n  id: string;\n  path: string;\n  background: AdvancedBackground;\n};\n\n@Injectable({ providedIn: \"root\" })\nexport class BackgroundService {\n  private logger: Logger;\n  private styleElement: HTMLStyleElement;\n  private backgroundStyleElement: HTMLStyleElement;\n  private uiFontStyleElement: HTMLStyleElement;\n  private uiOtherStyleElement: HTMLStyleElement;\n  pluginConfig: BackgroundPluginConfig;\n  private backgroundTimer: NodeJS.Timeout;\n  private transitionTimer: NodeJS.Timeout;\n  private previewMode: boolean;\n  private previewIndex: number;\n  private slideShowList: string[];\n  private slideShowCurrentIndex: number;\n\n  constructor(\n    public config: ConfigService,\n    private logService: LogService,\n    private translate: TranslateService\n  ) {\n    this.logger = this.logService.create(\"tabby-background\");\n    this.logger.info(\"BackgroundService ctor\");\n\n    this.backgroundStyleElement = document.createElement(\"style\");\n    this.backgroundStyleElement.id = \"background\";\n    this.backgroundStyleElement.innerHTML = \"\";\n    document.body.appendChild(this.backgroundStyleElement);\n    this.uiFontStyleElement = document.createElement(\"style\");\n    this.uiFontStyleElement.id = \"uiFont\";\n    this.uiFontStyleElement.innerHTML = \"\";\n    document.body.appendChild(this.uiFontStyleElement);\n    this.uiOtherStyleElement = document.createElement(\"style\");\n    this.uiOtherStyleElement.id = \"uiOther\";\n    this.uiOtherStyleElement.innerHTML = \"\";\n    document.body.appendChild(this.uiOtherStyleElement);\n\n    this.previewMode = false;\n    this.slideShowList = [];\n\n    this.config.ready$.subscribe(() => {\n      this.logger.info(\"config ready\");\n      this.pluginConfig = this.config.store.backgroundPlugin;\n      this.applyStyle();\n      setImmediate(() => {\n        for (const translation of translations) {\n          const [lang, trans] = translation;\n          this.translate.setTranslation(lang, trans, true);\n          this.logger.info(\"translate applied\");\n        }\n      });\n    });\n  }\n\n  clearStyle() {\n    this.backgroundStyleElement.innerHTML = \"\";\n    this.uiFontStyleElement.innerHTML = \"\";\n    this.uiOtherStyleElement.innerHTML = \"\";\n    this.leaveSlideShow();\n  }\n\n  applyStyle() {\n    this.clearStyle();\n\n    // this.styleElement.innerHTML = this.buildCss();\n    this.uiFontStyleElement.innerHTML = this.buildUiFontCss();\n    this.uiOtherStyleElement.innerHTML = this.buildOthersCss();\n\n    if (this.pluginConfig.backgroundEnabled === true) {\n      if (this.pluginConfig.backgroundMode === \"simple\") {\n        this.applyBackground(uuid.NIL, false);\n      } else if (this.pluginConfig.backgroundMode === \"advanced\") {\n        if (this.previewMode) {\n          this.applyBackgroundPreview();\n          return;\n        }\n        if (this.pluginConfig.backgroundAdvancedSwitchType === \"slideshow\") {\n          this.enterSlideShow();\n        }\n      }\n    }\n    this.logger.info(\"Background applied.\");\n  }\n\n  apply() {\n    if (this.pluginConfig.backgroundAdvancedSlideshowInterval < 5) {\n      this.pluginConfig.backgroundAdvancedSlideshowInterval = 5;\n    }\n    this.config.save();\n    this.applyStyle();\n  }\n\n  applyBackground(id: string, updateTimestamp = true) {\n    this.backgroundStyleElement.innerHTML = this.backgroundStyleElement.innerHTML.replace(\n      /\\/\\*background-opacity-placeholder\\*\\/.*/,\n      \"/*background-opacity-placeholder*/opacity: 0;\"\n    );\n    setTimeout(() => {\n      if (id === uuid.NIL) {\n        const backgroundCss = this.buildBackgroundCss(this.pluginConfig);\n        this.backgroundStyleElement.innerHTML = backgroundCss;\n      } else {\n        this.backgroundStyleElement.innerHTML = this.buildBackgroundCss(this.getBackgroundByID(id));\n        this.pluginConfig.backgroundAdvancedCurrentId = id;\n        if (updateTimestamp) {\n          this.pluginConfig.backgroundLastChangedTime = Date.now();\n        }\n      }\n      setTimeout(() => {\n        this.backgroundStyleElement.innerHTML = this.backgroundStyleElement.innerHTML.replace(\n          /\\/\\*background-opacity-placeholder\\*\\/.*/,\n          \"/*background-opacity-placeholder*/opacity: 1;\"\n        );\n      }, 500);\n      this.config.save();\n    }, 500);\n  }\n  applyBackgroundPreview() {\n    this.backgroundStyleElement.innerHTML = this.buildBackgroundCss(\n      this.pluginConfig.backgrounds[this.previewIndex]\n    ).replace(\n      /\\/\\*background-opacity-placeholder\\*\\/.*/,\n      \"/*background-opacity-placeholder*/opacity: 1;\"\n    );\n  }\n\n  addBackground() {\n    const newBackground: AdvancedBackground = Object.assign({}, DefaultBackground);\n    newBackground.id = uuid.v4();\n    newBackground.name = `bg${this.pluginConfig.backgrounds.length}`;\n    this.pluginConfig.backgrounds.unshift(newBackground);\n    this.logger.debug(`background ${newBackground.id} added...`);\n    this.apply();\n  }\n\n  delBackground(i: number) {\n    this.pluginConfig.backgrounds.splice(i, 1);\n    this.apply();\n  }\n\n  getBackgroundByID(id: string) {\n    const [advancedId, isFolder, fileName] = id.split(\"|\");\n    let realBackground: AdvancedBackground;\n    const background = this.pluginConfig.backgrounds.find((value) => value.id === advancedId);\n\n    realBackground = Object.assign({}, background);\n    if (isFolder === \"true\") {\n      realBackground.backgroundPath += `/${fileName}`;\n    }\n    return realBackground;\n  }\n\n  buildSlideShowList() {\n    this.slideShowList = [];\n    const filteredList = this.pluginConfig.backgrounds.filter((value) => value.enabled);\n    for (const item of filteredList) {\n      const { id, isFolder = false } = item;\n      const fileName = \"null\";\n      let files: string[] = [];\n      if (item.isFolder) {\n        try {\n          files = readdirSync(item.backgroundPath);\n        } catch {\n          continue;\n        }\n\n        this.slideShowList.push(...files.map((value) => [id, isFolder, value].join(\"|\")));\n      } else {\n        this.slideShowList.push([id, isFolder, fileName].join(\"|\"));\n      }\n    }\n    //.map((value) => `${value.id}|${value.isFolder}|${}`);\n    if (this.pluginConfig.backgroundAdvancedChooseType === \"sequence\") {\n    } else if (this.pluginConfig.backgroundAdvancedChooseType === \"reverse\") {\n      this.slideShowList.reverse();\n    } else if (this.pluginConfig.backgroundAdvancedChooseType === \"random\") {\n      this.slideShowList.sort(() => Math.random() - 0.5);\n    }\n    this.slideShowCurrentIndex = this.slideShowList.findIndex(\n      (value) => value === this.pluginConfig.backgroundAdvancedCurrentId\n    );\n    if (this.slideShowCurrentIndex === -1) {\n      this.slideShowCurrentIndex = 0;\n      this.pluginConfig.backgroundAdvancedCurrentId =\n        this.slideShowList[this.slideShowCurrentIndex];\n    }\n  }\n\n  enterSlideShow() {\n    const handler = () => {\n      console.debug(this.slideShowList);\n      this.slideShowCurrentIndex++;\n      if (this.slideShowCurrentIndex > this.slideShowList.length - 1) {\n        this.slideShowCurrentIndex = 0;\n      }\n      this.applyBackground(this.slideShowList[this.slideShowCurrentIndex]);\n      this.backgroundTimer = setTimeout(\n        handler,\n        this.pluginConfig.backgroundAdvancedSlideshowInterval * 1000\n      );\n    };\n    this.leaveSlideShow();\n    this.buildSlideShowList();\n    if (this.slideShowList.length === 0) {\n      return;\n    }\n\n    const leftTime =\n      this.pluginConfig.backgroundAdvancedSlideshowInterval * 1000 -\n      (Date.now() - this.pluginConfig.backgroundLastChangedTime);\n    if (leftTime > 0) {\n      this.logger.info(`${leftTime / 1000} second left to change background`);\n      this.applyBackground(this.slideShowList[this.slideShowCurrentIndex], false);\n      this.backgroundTimer = setTimeout(handler, leftTime);\n    } else {\n      handler();\n    }\n  }\n\n  leaveSlideShow() {\n    if (this.backgroundTimer) {\n      clearTimeout(this.backgroundTimer);\n      this.backgroundTimer = undefined;\n    }\n    if (this.transitionTimer) {\n      clearTimeout(this.transitionTimer);\n      this.transitionTimer = undefined;\n    }\n  }\n\n  enterPreviewMode(i: number) {\n    this.previewMode = true;\n    this.previewIndex = i;\n    this.applyStyle();\n  }\n\n  leavePreviewMode() {\n    if (this.previewMode) {\n      this.previewMode = false;\n      this.applyStyle();\n    }\n  }\n\n  buildBackgroundCss(background: Background) {\n    const { backgroundPath, backgroundShowType } = background;\n    const { backgroundFullscreenType, backgroundFullscreenRepeatType } = background;\n    const {\n      backgroundFloatSize,\n      backgroundFloatX,\n      backgroundFloatY,\n      backgroundFloatXAlign,\n      backgroundFloatYAlign,\n    } = background;\n    const {\n      backgroundOpacity,\n      backgroundBlur,\n      backgroundBrightness,\n      backgroundContrast,\n      backgroundGrayscale,\n      backgroundHueRotate,\n      backgroundInvert,\n      backgroundSaturate,\n      backgroundSepia,\n      backgroundDropShadowEnabled,\n      backgroundDropShadowX,\n      backgroundDropShadowY,\n      backgroundDropShadowBlur,\n      backgroundDropShadowColor,\n    } = background;\n    const {\n      backgroundListGroupTransparent,\n      backgroundTerminalToolbarTransparent,\n      backgroundFooterTransparent,\n    } = background;\n\n    const css = `\n/* added by tabby-background plugin */\n/* background */\n.content-tab-active {\n  background: none;\n}\n.content-tab-active::after {\n  content: \"\"; position: fixed; left: 0; right: 0; z-index: -2; display: block; width: 100%; height: 100%;\n  background: var(--body-bg);\n}\nstart-page.content-tab-active::after {\n  background: var(--theme-bg-more-2);\n}\n.content-tab-active::before {\n  /*background-opacity-placeholder*/opacity: 0;\n  content: \"\"; position: fixed; left: 0; right: 0; z-index: -1; display: block; width: 100%; height: 100%;\n  filter:${\n    (backgroundOpacity === 100 ? \"\" : ` opacity(${backgroundOpacity}%)`) +\n    (backgroundBlur === 0 ? \"\" : ` blur(${backgroundBlur}px)`) +\n    (backgroundBrightness === 100 ? \"\" : ` brightness(${backgroundBrightness}%)`) +\n    (backgroundContrast === 100 ? \"\" : ` contrast(${backgroundContrast}%)`) +\n    (backgroundGrayscale === 0 ? \"\" : ` grayscale(${backgroundGrayscale}%)`) +\n    (backgroundHueRotate === 0 ? \"\" : ` hue-rotate(${backgroundHueRotate}deg)`) +\n    (backgroundInvert === 0 ? \"\" : ` invert(${backgroundInvert}%)`) +\n    (backgroundSaturate === 100 ? \"\" : ` saturate(${backgroundSaturate}%)`) +\n    (backgroundSepia === 0 ? \"\" : ` sepia(${backgroundSepia}%)`) +\n    (backgroundShowType === \"float\" && backgroundDropShadowEnabled\n      ? ` drop-shadow(${backgroundDropShadowX}px ${backgroundDropShadowY}px ${backgroundDropShadowBlur}px ${backgroundDropShadowColor})`\n      : \"\") +\n    \";\"\n  }\n  background-image: url(\"${encodeURI(backgroundPath.replaceAll(\"\\\\\", \"/\"))}\");\n  transition: opacity 0.5s ease-in-out;\n${(() => {\n  if (backgroundShowType === \"fullscreen\") {\n    return `\n  background-repeat: ${backgroundFullscreenRepeatType};\n  background-position: center;\n  background-size: ${backgroundFullscreenType};`;\n  } else if (backgroundShowType === \"float\") {\n    return `\n  background-repeat: no-repeat;\n  background-position: \n  ${\n    backgroundFloatXAlign === \"center\"\n      ? backgroundFloatXAlign\n      : `${backgroundFloatXAlign} ${backgroundFloatX}px`\n  } \n  ${\n    backgroundFloatYAlign === \"center\"\n      ? backgroundFloatYAlign\n      : `${backgroundFloatYAlign} ${backgroundFloatY}px`\n  }; \n  background-size: ${backgroundFloatSize}px;`;\n  } else {\n    throw new Error(\"ShowType Error!\");\n  }\n})()}\n}\n/* group list */\n${\n  backgroundListGroupTransparent > 0\n    ? `\n.list-group {\n  --bs-list-group-bg: color-mix(in srgb, var(--theme-bg-more) ${\n    100 - backgroundListGroupTransparent\n  }%, transparent);\n}`.trim()\n    : \"\"\n}\n/* toolbar */\n${\n  backgroundTerminalToolbarTransparent > 0\n    ? `\nterminal-toolbar {\n  background: color-mix(in srgb, var(--bs-body-bg) ${\n    100 - backgroundTerminalToolbarTransparent\n  }%, transparent) !important;\n}`.trim()\n    : \"\"\n}\n/* footer */\n${\n  backgroundFooterTransparent !== 50\n    ? `\nfooter {\n  background: color-mix(in srgb, rgba(0,0,0,1) ${\n    100 - backgroundFooterTransparent\n  }%, transparent) !important;\n}`.trim()\n    : \"\"\n}`.trim();\n    return css;\n  }\n\n  buildUiFontCss() {\n    const { uiFontEnabled, uiFontFamily, uiFontSize, uiFontTabBarCloseBtnFix } = this.pluginConfig;\n    if (!uiFontEnabled) {\n      return \"\";\n    }\n    const uiFontCss = `\n/* added by tabby-background plugin */\nbody {\n  font-family: \"${uiFontFamily}\";\n  font-size: ${uiFontSize}px;\n}\n${\n  uiFontTabBarCloseBtnFix\n    ? `\napp-root>.content .tab-bar>.tabs tab-header button {\n  /*left: 8px;*/\n  font-family: \"Source Sans Pro\";\n}`.trim()\n    : \"\"\n}`.trim();\n    return uiFontCss;\n  }\n\n  buildOthersCss() {\n    const {\n      othersInactiveTabDimming,\n      othersActiveTabDimming,\n      othersTabBarPersistentSpaceMinWidth,\n    } = this.pluginConfig;\n\n    const othersCss = `\n/* added by tabby-background plugin */\n/* tab dimming settings */\n${\n  othersInactiveTabDimming !== 50\n    ? `\nsplit-tab>.child {\n  opacity: ${(100 - othersInactiveTabDimming) / 100};\n}`.trim()\n    : \"\"\n}\n${\n  othersActiveTabDimming !== 0\n    ? `\nsplit-tab>.child.focused {\n  opacity: ${(100 - othersActiveTabDimming) / 100};\n}`.trim()\n    : \"\"\n}\n/* tabbar settings */\n${\n  othersTabBarPersistentSpaceMinWidth !== 138\n    ? `\n.btn-space.persistent {\n  min-width: ${othersTabBarPersistentSpaceMinWidth}px !important;\n}\n`.trim()\n    : \"\"\n}`.trim();\n\n    return othersCss;\n  }\n}\n\n// export function tabsFlexMinWidth(width: number) {\n//   return `\n// .flex-width {\n//   min-width: ${width}px;\n// }\\n`;\n// }\n\n// export function tabsFixedWidth(width: number) {\n//   return `\n// tab-header {\n//   width: ${width}px !important;\n// }\\n`;\n// }\n","import { ConfigProvider } from \"tabby-core\";\nimport * as uuid from \"uuid\";\n\nexport type ShowType = \"fullscreen\" | \"float\";\nexport type FullscreenType = \"contain\" | \"cover\";\nexport type FullscreenRepeatType = \"repeat\" | \"no-repeat\";\n\nexport type FloatXAlign = \"left\" | \"center\" | \"right\";\nexport type FloatYAlign = \"top\" | \"center\" | \"bottom\";\n\nexport type Background = {\n  backgroundPath: string;\n  backgroundShowType: ShowType;\n  backgroundFullscreenType: FullscreenType;\n  backgroundFullscreenRepeatType: FullscreenRepeatType;\n  backgroundFloatSize: number;\n  backgroundFloatX: number;\n  backgroundFloatY: number;\n  backgroundFloatXAlign: FloatXAlign;\n  backgroundFloatYAlign: FloatYAlign;\n  backgroundDropShadowEnabled: boolean;\n  backgroundDropShadowX: number;\n  backgroundDropShadowY: number;\n  backgroundDropShadowBlur: number;\n  backgroundDropShadowColor: string;\n  backgroundOpacity: number;\n  backgroundBlur: number;\n  backgroundBrightness: number;\n  backgroundContrast: number;\n  backgroundGrayscale: number;\n  backgroundHueRotate: number;\n  backgroundInvert: number;\n  backgroundSaturate: number;\n  backgroundSepia: number;\n  backgroundListGroupTransparent: number;\n  backgroundTerminalToolbarTransparent: number;\n  backgroundFooterTransparent: number;\n};\n\nexport type AdvancedBackground = Background & {\n  // profile: any; // 单会话背景配置，先不实现喵，留个坑喵~\n  enabled: boolean;\n  id: string;\n  name: string;\n  isFolder: boolean;\n};\n\nexport const DefaultBackground: AdvancedBackground = {\n  enabled: false,\n  id: uuid.NIL,\n  name: \"\",\n  isFolder: false,\n  backgroundPath: \"\",\n  backgroundShowType: \"fullscreen\",\n  backgroundFullscreenType: \"cover\",\n  backgroundFullscreenRepeatType: \"no-repeat\",\n  backgroundFloatSize: 0,\n  backgroundFloatX: 0,\n  backgroundFloatY: 0,\n  backgroundFloatXAlign: \"center\",\n  backgroundFloatYAlign: \"center\",\n  backgroundDropShadowEnabled: false,\n  backgroundDropShadowX: 0,\n  backgroundDropShadowY: 0,\n  backgroundDropShadowBlur: 0,\n  backgroundDropShadowColor: \"black\",\n  backgroundOpacity: 100,\n  backgroundBlur: 0,\n  backgroundBrightness: 100,\n  backgroundContrast: 100,\n  backgroundGrayscale: 0,\n  backgroundHueRotate: 0,\n  backgroundInvert: 0,\n  backgroundSaturate: 100,\n  backgroundSepia: 0,\n  backgroundListGroupTransparent: 0,\n  backgroundTerminalToolbarTransparent: 0,\n  backgroundFooterTransparent: 50,\n};\n\nexport type BackgroundPluginConfig = Background & {\n  backgroundEnabled: boolean;\n  uiFontEnabled: boolean;\n  uiFontFamily: string;\n  uiFontSize: number;\n  uiFontTabBarCloseBtnFix: boolean;\n  tabsOverrideEnabled: boolean;\n  tabsFlexMinWidth: number;\n  tabsFixedWidth: number;\n  othersInactiveTabDimming: number;\n  othersActiveTabDimming: number;\n  othersTabBarPersistentSpaceMinWidth: number;\n  backgroundMode: \"simple\" | \"advanced\";\n  backgrounds: AdvancedBackground[];\n  backgroundAdvancedType: \"per-tab\" | \"global\";\n  backgroundAdvancedChooseType: \"sequence\" | \"random\" | \"reverse\";\n  backgroundAdvancedSwitchType: \"slideshow\" | \"session\";\n  backgroundAdvancedSlideshowInterval: number;\n  backgroundAdvancedCurrentId: string;\n  backgroundLastChangedTime: number;\n};\n\n/** @hidden */\nexport class BackgroundConfigProvider extends ConfigProvider {\n  defaults: { backgroundPlugin: BackgroundPluginConfig } = {\n    backgroundPlugin: {\n      backgroundEnabled: false,\n      backgroundPath: \"../../../data/background.jpg\",\n      backgroundShowType: \"fullscreen\",\n      backgroundFullscreenType: \"cover\",\n      backgroundFullscreenRepeatType: \"no-repeat\",\n      backgroundFloatSize: 300,\n      backgroundFloatX: 0,\n      backgroundFloatY: 0,\n      backgroundFloatXAlign: \"right\",\n      backgroundFloatYAlign: \"bottom\",\n      backgroundDropShadowEnabled: false,\n      backgroundDropShadowX: 0,\n      backgroundDropShadowY: 0,\n      backgroundDropShadowBlur: 10,\n      backgroundDropShadowColor: \"gray\",\n      backgroundOpacity: 45,\n      backgroundBlur: 0,\n      backgroundBrightness: 100,\n      backgroundContrast: 100,\n      backgroundGrayscale: 0,\n      backgroundHueRotate: 0,\n      backgroundInvert: 0,\n      backgroundSaturate: 100,\n      backgroundSepia: 0,\n      backgroundListGroupTransparent: 0,\n      backgroundTerminalToolbarTransparent: 0,\n      backgroundFooterTransparent: 50,\n      uiFontEnabled: false,\n      uiFontFamily: \"Source Sans Pro\",\n      uiFontSize: 14,\n      uiFontTabBarCloseBtnFix: true,\n      tabsOverrideEnabled: false,\n      tabsFlexMinWidth: 200,\n      tabsFixedWidth: 200,\n      othersInactiveTabDimming: 50,\n      othersActiveTabDimming: 0,\n      othersTabBarPersistentSpaceMinWidth: 138,\n      backgroundMode: \"simple\",\n      backgrounds: [],\n      backgroundAdvancedType: \"global\",\n      backgroundAdvancedChooseType: \"sequence\",\n      backgroundAdvancedSwitchType: \"session\",\n      backgroundAdvancedSlideshowInterval: 3600,\n      backgroundAdvancedCurrentId: uuid.NIL,\n      backgroundLastChangedTime: 0,\n    },\n  };\n}\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { BackgroundService } from \"./background.service\";\nimport { AdvancedBackground, BackgroundPluginConfig } from \"./config.provider\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { ConfigService, TranslateService } from \"tabby-core\";\nimport { ElectronHostWindow, ElectronService } from \"tabby-electron\";\nimport { debounce } from \"utils-decorators\";\n\n/** @hidden */\n@Component({\n  template: require(\"./settings-tab.component.html\"),\n  styles: [\n    `\n      .font-size-input {\n        width: 100px;\n        flex: none;\n      }\n      .param-input {\n        width: 70px;\n        flex: none;\n      }\n\n      .font-family-input {\n        min-width: 150px;\n        // flex: none;\n      }\n\n      .background-input {\n        min-width: 300px;\n        // flex: none;\n      }\n      .list-group-item-background {\n        --bs-list-group-action-hover-bg: rgba(0, 0, 0, 0.55);\n        // backdrop-filter: blur(3px);\n      }\n      .close {\n        // font-size: 1.4rem;\n        opacity: 0.1;\n        transition: opacity 0.3s;\n      }\n      .nav-link:hover > .close {\n        opacity: 0.8;\n      }\n      .add-button {\n        opacity: 0.4;\n      }\n      .add-button:hover {\n        opacity: 0.9;\n      }\n    `,\n  ],\n})\nexport class BackgroundSettingsTabComponent implements OnDestroy {\n  filters: any[] = [\n    {\n      title: \"Background opacity\",\n      description: \"Unit: %, 100 = disable\",\n      model: \"backgroundOpacity\",\n      default: \"100\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n    {\n      title: \"Background blur\",\n      description: \"Unit: px, 0 = disable\",\n      model: \"backgroundBlur\",\n      default: \"0\",\n      min: \"0\",\n      max: \"10\",\n      step: \"0.1\",\n    },\n    {\n      title: \"Background brightness\",\n      description: \"Unit: %, 100 = disable\",\n      model: \"backgroundBrightness\",\n      default: \"100\",\n      min: \"0\",\n      max: \"200\",\n      step: \"1\",\n    },\n    {\n      title: \"Background contrast\",\n      description: \"Unit: %, 100 = disable\",\n      model: \"backgroundContrast\",\n      default: \"100\",\n      min: \"0\",\n      max: \"500\",\n      step: \"1\",\n    },\n    {\n      title: \"Background grayscale\",\n      description: \"Unit: %, 0 = disable\",\n      model: \"backgroundGrayscale\",\n      default: \"0\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n    {\n      title: \"Background hue rotate\",\n      description: \"Unit: degree, 0 = disable\",\n      model: \"backgroundHueRotate\",\n      default: \"0\",\n      min: \"0\",\n      max: \"360\",\n      step: \"1\",\n    },\n    {\n      title: \"Background invert\",\n      description: \"Unit: %, 0 = disable\",\n      model: \"backgroundInvert\",\n      default: \"0\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n    {\n      title: \"Background saturate\",\n      description: \"Unit: %, 100 = disable\",\n      model: \"backgroundSaturate\",\n      default: \"100\",\n      min: \"0\",\n      max: \"1000\",\n      step: \"1\",\n    },\n    {\n      title: \"Background sepia\",\n      description: \"Unit: %, 0 = disable\",\n      model: \"backgroundSepia\",\n      default: \"0\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n  ];\n\n  extraSettings: any[] = [\n    {\n      title: \"Group list transparent\",\n      description: \"Unit: %, 0 = disable, Apply to home menu and other group list\",\n      model: \"backgroundListGroupTransparent\",\n      default: \"0\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n    {\n      title: \"Terminal toolbar transparent\",\n      description: \"Unit: %, 0 = disable, Apply to terminal toolbar\",\n      model: \"backgroundTerminalToolbarTransparent\",\n      default: \"0\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n    {\n      title: \"Home page footer transparent\",\n      description: \"Unit: %, 50 = disable, Apply to home page footer\",\n      model: \"backgroundFooterTransparent\",\n      default: \"50\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n  ];\n\n  others: any[] = [\n    // {\n    //   title: \"Tabs dynamic width min\",\n    //   description: \"Unit: px, 0 = disable\",\n    //   model: \"tabsFlexMinWidth\",\n    //   default: \"200\",\n    //   min: \"0\",\n    //   max: \"1000\",\n    //   step: \"1\",\n    // },\n    // {\n    //   title: \"Tabs fixed width\",\n    //   description: \"Unit: px, 200 = disable\",\n    //   model: \"tabsFixedWidth\",\n    //   default: \"200\",\n    //   min: \"50\",\n    //   max: \"1000\",\n    //   step: \"1\",\n    // },\n    {\n      title: \"Inactive split panel dimming\",\n      description: \"Unit: %, 50 = default\",\n      model: \"othersInactiveTabDimming\",\n      default: \"50\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n    {\n      title: \"Active split panel dimming\",\n      description: \"Unit: %, 0 = default\",\n      model: \"othersActiveTabDimming\",\n      default: \"0\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n    },\n    {\n      title: \"TabBar preserve space width\",\n      description: \"Unit: px, 138 = disable\",\n      model: \"othersTabBarPersistentSpaceMinWidth\",\n      default: \"138\",\n      min: \"0\",\n      max: \"1000\",\n      step: \"1\",\n    },\n  ];\n\n  pluginConfig: BackgroundPluginConfig;\n\n  constructor(\n    public config: ConfigService,\n    private background: BackgroundService,\n    private electron: ElectronService,\n    private hostWindow: ElectronHostWindow,\n    private toastr: ToastrService,\n    private translate: TranslateService\n  ) {\n    this.pluginConfig = this.config.store.backgroundPlugin;\n  }\n  ngOnDestroy(): void {\n    this.background.leavePreviewMode();\n  }\n\n  async pickFile(background?: AdvancedBackground): Promise<void> {\n    const isFolder = background?.isFolder;\n\n    const paths = this.electron.dialog.showOpenDialogSync(this.hostWindow.getWindow(), {\n      filters: isFolder\n        ? undefined\n        : [\n            { name: \"Images\", extensions: [\"jpg\", \"png\", \"gif\"] },\n            { name: \"All Files\", extensions: [\"*\"] },\n          ],\n      properties: [isFolder ? \"openDirectory\" : \"openFile\", \"showHiddenFiles\"],\n    });\n    if (paths && paths[0]) {\n      if (background) {\n        background.backgroundPath = paths[0];\n      } else {\n        this.config.store.backgroundPlugin.backgroundPath = paths[0];\n      }\n      this.apply();\n    }\n  }\n\n  apply() {\n    this.background.apply();\n    // this.toastr.info(this.translate.instant(\"Background applied!\"));\n  }\n\n  dropBackgroundItem(event: CdkDragDrop<AdvancedBackground[]>) {\n    moveItemInArray(this.pluginConfig.backgrounds, event.previousIndex, event.currentIndex);\n    this.apply();\n  }\n\n  addBackground() {\n    this.background.addBackground();\n  }\n\n  delBackground(i: number) {\n    this.background.delBackground(i);\n  }\n\n  previewBackground(i: number) {\n    this.background.enterPreviewMode(i);\n  }\n\n  exportBackgroundAdvancedSettings() {}\n  importBackgroundAdvancedSettings() {}\n}\n","import { Injectable } from \"@angular/core\";\nimport { SettingsTabProvider } from \"tabby-settings\";\nimport { BackgroundSettingsTabComponent } from \"./settings-tab.component\";\n\n/** @hidden */\n@Injectable()\nexport class BackgroundSettingsTabProvider extends SettingsTabProvider {\n  id = \"tabby-background\";\n  icon = \"image\";\n  title = \"Background\";\n\n  constructor() {\n    super();\n  }\n\n  getComponentType(): any {\n    return BackgroundSettingsTabComponent;\n  }\n}\n","type BackgroundPluginTranslations = Record<string, string>;\n\nexport const translations: [string, BackgroundPluginTranslations][] = [\n  [\n    \"zh-CN\",\n    {\n      \"Restore the tab closing button to default font\": \"将标签页关闭按钮恢复为默认字体\",\n      \"Background blur\": \"背景模糊度\",\n      \"Background brightness\": \"背景亮度\",\n      \"Background contrast\": \"背景对比度\",\n      \"Background Filters\": \"背景特效\",\n      \"Background grayscale\": \"背景灰度\",\n      \"Background hue rotate\": \"背景色相旋转\",\n      \"Background image master switch\": \"背景图片总开关\",\n      \"Background invert\": \"背景反转\",\n      \"Background opacity\": \"背景不透明度\",\n      \"Background path\": \"背景图片路径\",\n      \"Background saturate\": \"背景饱和度\",\n      \"Background sepia\": \"背景褐色\",\n      \"Background show type\": \"背景显示类型\",\n      \"Background\": \"背景\",\n      \"Center\": \"中央\",\n      \"Contain\": \"适应\",\n      \"Cover\": \"填充\",\n      \"Do not affect the terminal font in the [appearance] configuration\":\n        \"不影响【外观】配置中的终端字体\",\n      \"Drop shadow blur\": \"阴影模糊\",\n      \"Drop shadow color\": \"阴影颜色\",\n      \"Drop Shadow Parameters\": \"背景阴影参数\",\n      \"Drop shadow X offset\": \"阴影X偏移\",\n      \"Drop shadow Y offset\": \"阴影Y偏移\",\n      \"Enable background\": \"是否启用背景图片\",\n      \"Enable drop shadow\": \"启用背景阴影\",\n      \"Enable tabs parameter override\": \"启用标签页参数覆盖\",\n      \"Enable UI font replace\": \"是否启用界面字体替换\",\n      \"Extra Settings\": \"额外设置\",\n      \"Fix close button font\": \"修复标签页关闭按钮字体\",\n      \"Float Parameters\": \"浮动参数\",\n      \"Float size\": \"浮动大小\",\n      \"Float X align\": \"浮动X对齐\",\n      \"Float X offset\": \"浮动X偏移\",\n      \"Float Y align\": \"浮动Y对齐\",\n      \"Float Y offset\": \"浮动Y偏移\",\n      \"Float\": \"浮动\",\n      \"Fullscreen type\": \"全屏类型\",\n      \"Fullscreen\": \"全屏\",\n      \"Group list transparent\": \"分组列表透明度\",\n      \"Home page footer transparent\": \"主页页脚透明度\",\n      \"No Repeat\": \"不重复\",\n      \"Relative path begins with ../../../data\": \"相对路径从../../../data开始\",\n      \"Repeat type\": \"重复类型\",\n      \"Repeat\": \"重复\",\n      \"Tabs dynamic width min\": \"动态标签页宽度最小宽度\",\n      \"Tabs fixed width\": \"固定标签页宽度\",\n      \"Terminal toolbar transparent\": \"终端工具栏透明度\",\n      \"UI Font Family\": \"界面字体\",\n      \"UI Font\": \"字体\",\n      \"Unit: %, 0 = disable, Apply to home menu and other group list\":\n        \"单位：%，0 = 禁用，应用到首页菜单和其他分组列表\",\n      \"Unit: %, 0 = disable, Apply to terminal toolbar\": \"单位：%，0 = 禁用，应用到终端工具栏\",\n      \"Unit: %, 0 = disable\": \"单位：%，0 = 禁用\",\n      \"Unit: %, 100 = disable\": \"单位：%，100 = 禁用\",\n      \"Unit: %, 50 = disable, Apply to home page footer\": \"单位：%，50 = 禁用，应用到主页页脚\",\n      \"Unit: degree, 0 = disable\": \"单位：度，0 = 禁用\",\n      \"Unit: px, 0 = disable\": \"单位：像素，0 = 禁用\",\n      \"Unit: px\": \"单位：像素\",\n      \"Use RGBA (#FF0000A0) or color name(red, green, ...)\":\n        \"使用RGBA（#FF0000A0）或者颜色名字（red, green, ...）\",\n      \"Others\": \"其他\",\n      \"Unit: %, 50 = default\": \"单位：%，50 = 默认\",\n      \"Unit: %, 0 = default\": \"单位：%，0 = 默认\",\n      \"Inactive split panel dimming\": \"非活动拆分页面变暗\",\n      \"Active split panel dimming\": \"活动拆分页面变暗\",\n      \"Background applied!\": \"背景已应用！\",\n      \"TabBar preserve space width\": \"标签栏预留宽度\",\n      \"Unit: px, 138 = disable\": \"单位：像素，138 = 禁用\",\n      \"Background switch type\": \"背景切换类型\",\n      \"When switch background\": \"什么时候切换背景\",\n      \"Slideshow\": \"幻灯片\",\n      \"Slideshow interval\": \"幻灯片间隔\",\n      \"Slideshow interval (second)\": \"幻灯片间隔（秒）\",\n      \"Background choose type\": \"背景选择方式\",\n      \"How to choose background\": \"如何抽取背景\",\n      \"Sequence\": \"顺序\",\n      \"Random\": \"随机\",\n      \"Reverse\": \"倒序\",\n      \"Simple\": \"简单\",\n      \"Background mode\": \"背景模式\",\n    },\n  ],\n];\n","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","export default '00000000-0000-0000-0000-000000000000';","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","module.exports = require(\"crypto\");","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_cdk_drag_drop__;","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_common__;","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE__angular_forms__;","module.exports = __WEBPACK_EXTERNAL_MODULE__ng_bootstrap_ng_bootstrap__;","module.exports = __WEBPACK_EXTERNAL_MODULE_fs__;","module.exports = __WEBPACK_EXTERNAL_MODULE_ngx_toastr__;","module.exports = __WEBPACK_EXTERNAL_MODULE_tabby_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE_tabby_electron__;","module.exports = __WEBPACK_EXTERNAL_MODULE_tabby_settings__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport TabbyCoreModule, { ConfigProvider, ConfigService } from \"tabby-core\";\nimport { SettingsTabProvider } from \"tabby-settings\";\n\nimport { BackgroundService } from \"./background.service\";\nimport { BackgroundConfigProvider } from \"./config.provider\";\nimport { BackgroundSettingsTabComponent } from \"./settings-tab.component\";\nimport { BackgroundSettingsTabProvider } from \"./settings-tab.provider\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, TabbyCoreModule, NgbModule],\n  providers: [\n    { provide: ConfigProvider, useClass: BackgroundConfigProvider, multi: true },\n    { provide: SettingsTabProvider, useClass: BackgroundSettingsTabProvider, multi: true },\n  ],\n  entryComponents: [BackgroundSettingsTabComponent],\n  declarations: [BackgroundSettingsTabComponent],\n})\nexport default class BackgroundModule {\n  constructor(public config: ConfigService, private readonly background: BackgroundService) {}\n}\n"],"names":[],"sourceRoot":""}